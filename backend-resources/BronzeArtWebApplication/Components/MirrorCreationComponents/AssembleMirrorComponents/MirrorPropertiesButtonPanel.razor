@namespace BronzeArtWebApplication.Components.MirrorCreationComponents.AssembleMirrorComponents
@inject ILanguageContainerService languageContainer
@inject AssembleMirrorViewModel Vm


<fieldset style="border:1px solid var(--customPrimary)" class="rounded-lg">
    <legend style="margin-left: 20px; padding-inline: 10px; display: inline-block; color: var(--customPrimary)">
        @(languageContainer.Keys["MainFieldsetLegend"])
    </legend>
    <MudGrid Class="ma-2" Style="width:inherit">
        <!-- #region 1.Shape Button -->

        <MudItem xs="12" Class="ma-0 pa-0">
            <MudPaper Outlined="false"
                      Elevation="0"
                      Class="d-flex flex-row mx-4 my-2 align-center">
                <MudButton FullWidth="true"
                           OnClick="(() => OnOptionButtonClick.InvokeAsync(MirrorDialog.ChooseShape))"
                           Variant="@OptionButtonVariant"
                           Style="text-transform:none;"
                           StartIcon="fas fa-shapes"
                           IconColor="@ButtonIconColor">
                    @(ShapeButtonCaption())
                </MudButton>
            </MudPaper>
        </MudItem>

        <!-- #endregion -->
        <!-- #region 2.Light Button -->
        <MudItem xs="12" Class="ma-0 pa-0">
            <MudPaper Outlined="false"
                      Elevation="0"
                      Class="d-flex flex-column mx-4 my-2">
                <MudButton FullWidth="true"
                           OnClick="(() => OnOptionButtonClick.InvokeAsync(MirrorDialog.ChooseLight))"
                           Variant="@OptionButtonVariant"
                           Style="text-transform:none"
                           StartIcon="fas fa-lightbulb"
                           IconColor="@ButtonIconColor"
                           Disabled="@(!IsEnabledLightButton())">
                    @LightButtonCaption()
                </MudButton>
            </MudPaper>
        </MudItem>
        <!-- #endregion -->
        <!-- #region 3.Dimensions Button -->

        <MudItem xs="12" Class="ma-0 pa-0">
            <MudPaper Outlined="false"
                      Elevation="0"
                      Class="d-flex flex-column mx-4 my-2">
                <MudButton FullWidth="true"
                           OnClick="(() => OnOptionButtonClick.InvokeAsync(MirrorDialog.ChooseDimensions))"
                           Variant="@OptionButtonVariant"
                           Style="text-transform:none"
                           StartIcon="fas fa-pencil-ruler"
                           IconColor="@ButtonIconColor"
                           Disabled="@(!IsEnabledDimensionsButton())">
                    @DimensionsButtonCaption()
                </MudButton>
            </MudPaper>
        </MudItem>

        <!-- #endregion -->
        <!-- #region 4.Support Button -->

        <MudItem xs="12" Class="ma-0 pa-0">
            <MudPaper Outlined="false"
                      Elevation="0"
                      Class="d-flex flex-column mx-4 my-2">
                <MudButton FullWidth="true"
                           OnClick="(() => OnOptionButtonClick.InvokeAsync(MirrorDialog.ChooseSupport))"
                           Variant="@OptionButtonVariant"
                           Style="text-transform:none"
                           StartIcon="@Icons.Material.Filled.Checkroom"
                           IconColor="@ButtonIconColor"
                           Disabled="@(!IsEnabledSupportButton())">
                    @SupportButtonCaption()
                </MudButton>
            </MudPaper>
        </MudItem>

        <!-- #endregion -->
        <!-- #region 5.FrameFinish Button -->

        <MudItem xs="12" Class="ma-0 pa-0">
            <MudPaper Outlined="false"
                      Elevation="0"
                      Class="d-flex flex-column mx-4 my-2">
                <MudButton FullWidth="true"
                           OnClick="(() => OnOptionButtonClick.InvokeAsync(MirrorDialog.ChooseFrameFinish))"
                           Variant="@OptionButtonVariant"
                           Style="text-transform:none"
                           StartIcon="@Icons.Material.Filled.ColorLens"
                           IconColor="@ButtonIconColor"
                           Disabled="@(!IsEnabledFrameFinishButton())">
                    @FrameFinishButtonCaption()
                </MudButton>
            </MudPaper>
        </MudItem>

        <!-- #endregion -->
        <!-- #region 6.Sandblast Button -->

        <MudItem xs="12" Class="ma-0 pa-0">
            <MudPaper Outlined="false"
                      Elevation="0"
                      Class="d-flex flex-column mx-4 my-2">
                <MudButton FullWidth="true"
                           OnClick="@(() => {
                                                if (Vm.Shape == MirrorShape.Rectangular)
                                                {
                                                    OnOptionButtonClick.InvokeAsync(MirrorDialog.ChooseSandblast);
                                                }
                                                else if (Vm.Shape == MirrorShape.Circular)
                                                {
                                                    OnOptionButtonClick.InvokeAsync(MirrorDialog.ChooseSandblast);
                                                }
                                                else
                                                {
                                                    throw new NotSupportedException($"Shape Does Not Support Sandblast or is Null- Shape:{Vm.Shape}");
                                                }
                                            })"
                           Variant="@OptionButtonVariant"
                           Style="text-transform:none"
                           StartIcon="fas fa-edit"
                           IconColor="@ButtonIconColor"
                           Disabled="@(!IsEnabledSandblastButton())">
                    @SandblastButtonCaption()
                </MudButton>
            </MudPaper>
        </MudItem>

        <!-- #endregion -->
        <!-- #region 7.Touch Button -->

        <MudItem xs="12" Class="ma-0 pa-0">
            <MudPaper Outlined="false"
                      Elevation="0"
                      Class="d-flex flex-column mx-4 my-2">
                <MudButton FullWidth="true"
                           OnClick="(() => OnOptionButtonClick.InvokeAsync(MirrorDialog.ChooseSwitch))"
                           Variant="@OptionButtonVariant"
                           Style="text-transform:none"
                           StartIcon="fas fa-toggle-on"
                           IconColor="@ButtonIconColor"
                           Disabled="@(!IsEnabledSwitchButton())">
                    @SwitchButtonCaption()
                </MudButton>
            </MudPaper>
        </MudItem>

        <!-- #endregion -->
        <!-- #region 8.Fog Button -->

        <MudItem xs="12" Class="ma-0 pa-0">
            <MudPaper Outlined="false"
                      Elevation="0"
                      Class="d-flex flex-column mx-4 my-2">
                <MudButton FullWidth="true"
                           OnClick="(() => OnOptionButtonClick.InvokeAsync(MirrorDialog.ChooseFog))"
                           Variant="@OptionButtonVariant"
                           Style="text-transform:none"
                           StartIcon="fas fa-tint-slash"
                           IconColor="@ButtonIconColor"
                           Disabled="@(!IsEnabledDemisterButton())">
                    @(languageContainer.Keys["DialogFogTitle"])
                </MudButton>
            </MudPaper>
        </MudItem>

        <!-- #endregion -->
        <!-- #region 9.Magnifyer Button -->

        <MudItem xs="12" Class="ma-0 pa-0">
            <MudPaper Outlined="false"
                      Elevation="0"
                      Class="d-flex flex-column mx-4 my-2">
                <MudButton FullWidth="true"
                           OnClick="(() => OnOptionButtonClick.InvokeAsync(MirrorDialog.ChooseMagnifyer))"
                           Variant="@OptionButtonVariant"
                           Style="text-transform:none"
                           StartIcon="fas fa-search-plus"
                           IconColor="@ButtonIconColor"
                           Disabled="@(!IsEnabledMagnifyerButton())">
                    @(languageContainer.Keys["DialogMagnifyerTitle"])
                </MudButton>
            </MudPaper>
        </MudItem>

        <!-- #endregion -->
        <!-- #region 10.Screen Button -->

        <MudItem xs="12" Class="ma-0 pa-0">
            <MudPaper Outlined="false"
                      Elevation="0"
                      Class="d-flex flex-column mx-4 my-2">
                <MudButton FullWidth="true"
                           OnClick="(() => OnOptionButtonClick.InvokeAsync(MirrorDialog.ChooseScreen))"
                           Variant="@OptionButtonVariant"
                           Style="text-transform:none"
                           StartIcon="@Icons.Material.Filled.MediaBluetoothOn"
                           IconColor="@ButtonIconColor"
                           Disabled="@(!IsEnabledMediaButton())">
                    @(languageContainer.Keys["DialogScreenTitle"])
                </MudButton>
            </MudPaper>
        </MudItem>

        <!-- #endregion -->
        <!-- #region 11.Various Button -->

        <MudItem xs="12" Class="ma-0 pa-0">
            <MudPaper Outlined="false"
                      Elevation="0"
                      Class="d-flex flex-column mx-4 my-2">
                <MudButton FullWidth="true"
                           OnClick="(() => OnOptionButtonClick.InvokeAsync(MirrorDialog.ChooseVarious))"
                           Variant="@OptionButtonVariant"
                           Style="text-transform:none"
                           StartIcon="@Icons.Material.Filled.PlaylistAdd"
                           IconColor="@ButtonIconColor"
                           Disabled="@(!IsEnabledVariousButton())">
                    @(languageContainer.Keys["DialogVariousTitle"])
                </MudButton>
            </MudPaper>
        </MudItem>

        <!-- #endregion -->
        <!-- #region 12.Reset Button -->
        <MudItem xs="12" Class="ma-0 pa-0">
            <div class="mx-4 my-2">
                <MudButton OnClick="(() => ResetButtonClick.InvokeAsync())"
                           EndIcon="fas fa-undo"
                           FullWidth="true"
                           Color="Color.Primary"
                           Variant="Variant.Outlined"
                           Style="text-transform:none;height:80%;width:100%;">
                    @languageContainer.Keys["Reset"]
                </MudButton>
            </div>
        </MudItem>

        <!-- #endregion -->
        <!-- #region 13.Code Box -->
        <MudItem xs="12" Class="ma-0 pa-0">
            <GetMirrorByCodeBox OnEnterKeyPressed="@(Vm.PassMirrorToVM)"
                                TextBoxVariant="@Variant.Outlined"
                                Class="mx-4 my-2"
                                Style="width:100%;height:100%;" />
        </MudItem>
    </MudGrid>
</fieldset>
