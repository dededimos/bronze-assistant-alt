@* Fogs Dialog -- Handles the Disabling of TouchFog Option *@
@namespace BronzeArtWebApplication.Components.MirrorCreationComponents.Dialogs
@using BronzeArtWebApplication.Shared.Services
@inject ILanguageContainerService languageContainer
@inject BronzeUser user
@inject MirrorDialogNavigator dialogNav

<MudDialog @bind-Visible:get="@IsVisible" @bind-Visible:set="@IsVisibleChanged" Gutters="@(false)" Class="ma-4">
    <TitleContent>
        <MudText Typo="Typo.h6">
            @languageContainer.Keys["DialogFogTitle"]
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudContainer Style="@DialogContainerCssStyle">
            <fieldset class="rounded" style="user-select:none;border:1px solid var(--customDark)">
                <legend style="margin-left: 20px;padding-inline: 10px;display:inline-block">
                    @languageContainer.Keys["DialogFogFieldsetLegend"]
                </legend>
                <div class="d-flex flex-column">
                    <MudPaper Class="d-flex flex-wrap justify-center px-4 pt-4" Elevation="0">

                        <!-- 1.Fog 16Watt -->
                        @*Show Option only if Enabled or Already Part of it*@
                        @if (IsFogEnabled(MirrorOption.Fog16W) || HasFog16)
                        {
                            <MudTooltip Placement="@Placement.Top">
                                <ChildContent>
                                    <MudPaper Elevation="0"
                                              Outlined="false"
                                              Class="ma-1 pa-1 d-flex flex-column justify-center align-center"
                                              @onclick="((e) => { if(!IsFogEnabled(MirrorOption.Fog16W)) return;HasFog16 = !HasFog16;SetHasFog16(HasFog16) ;})">
                                        <img src="@(OptionsImagePaths[MirrorOption.Fog16W])"
                                             alt="@(languageContainer.Keys[MirrorOptionsDescKey[MirrorOption.Fog16W]])"
                                             style="@((IsFogEnabled(MirrorOption.Fog16W) ? "max-height:120px" : "max-height:120px;filter:grayscale(100%)"))" />
                                        <MudCheckBox T="bool"
                                                     Color="@CheckBoxesColor"
                                                     Dense="true"
                                                     Class="mt-2"
                                                     Disabled="@(!IsFogEnabled(MirrorOption.Fog16W))"
                                                     @bind-Value:get="@HasFog16"
                                                     @bind-Value:set="@SetHasFog16">
                                        </MudCheckBox>
                                    </MudPaper>
                                </ChildContent>
                                <TooltipContent>
                                    <MudContainer Class="d-flex flex-column justify-center align-center ma-0 pa-0">
                                        @if (!IsFogEnabled(MirrorOption.Fog16W))
                                        {
                                            <MudText Typo="Typo.caption">@languageContainer.Keys["CannotChangeOptionForThisMirror"]</MudText>
                                        }
                                        <MudText Typo="Typo.caption">@languageContainer.Keys["DialogFog16Caption"]</MudText>
                                        @if (user.IsPricingVisible)
                                        {
                                            <MudText Typo="Typo.caption">@((MirrorExtra.GetOptionPrice(MirrorOption.Fog16W) * PriceIncreaseFactor).ToString("0.00\u20AC"))</MudText>
                                        }
                                    </MudContainer>
                                </TooltipContent>
                            </MudTooltip>
                        }

                        <!-- 2.Fog 24Watt -->
                        @*Show Option only if Enabled or Already Part of it*@
                        @if (IsFogEnabled(MirrorOption.Fog24W) || HasFog24)
                        {
                            <MudTooltip Placement="@Placement.Top">
                                <ChildContent>
                                    <MudPaper Elevation="0"
                                              Outlined="false"
                                              Class="ma-1 pa-1 d-flex flex-column justify-center align-center"
                                              @onclick="((e) => { if(!IsFogEnabled(MirrorOption.Fog24W)) return;HasFog24 = !HasFog24;SetHasFog24(HasFog24) ;})">
                                        <img src="@(OptionsImagePaths[MirrorOption.Fog24W])"
                                             alt="@(languageContainer.Keys[MirrorOptionsDescKey[MirrorOption.Fog24W]])"
                                             style="@((IsFogEnabled(MirrorOption.Fog24W) ? "max-height:120px" : "max-height:120px;filter:grayscale(100%)"))" />
                                        <MudCheckBox T="bool"
                                                     Color="@CheckBoxesColor"
                                                     Dense="true"
                                                     Class="mt-2"
                                                     Disabled="@(!IsFogEnabled(MirrorOption.Fog24W))"
                                                     @bind-Value:get="@HasFog24"
                                                     @bind-Value:set="@SetHasFog24">
                                        </MudCheckBox>
                                    </MudPaper>
                                </ChildContent>
                                <TooltipContent>
                                    <MudContainer Class="d-flex flex-column justify-center align-center ma-0 pa-0">
                                        @if (!IsFogEnabled(MirrorOption.Fog24W))
                                        {
                                            <MudText Typo="Typo.caption">@languageContainer.Keys["CannotChangeOptionForThisMirror"]</MudText>
                                        }
                                        <MudText Typo="Typo.caption">@languageContainer.Keys["DialogFog24Caption"]</MudText>
                                        @if (user.IsPricingVisible)
                                        {
                                            <MudText Typo="Typo.caption">@((MirrorExtra.GetOptionPrice(MirrorOption.Fog24W) * PriceIncreaseFactor).ToString("0.00\u20AC"))</MudText>
                                        }
                                    </MudContainer>
                                </TooltipContent>
                            </MudTooltip>
                        }

                        <!-- 3.Fog 55Watt -->
                        @*Show Option only if Enabled or Already Part of it*@
                        @if (IsFogEnabled(MirrorOption.Fog55W) || HasFog55)
                        {
                            <MudTooltip Placement="@Placement.Top">
                                <ChildContent>
                                    <MudPaper Elevation="0"
                                              Outlined="false"
                                              Class="ma-1 pa-1 d-flex flex-column justify-center align-center"
                                              @onclick="((e) => { if(!IsFogEnabled(MirrorOption.Fog55W)) return;HasFog55 = !HasFog55;SetHasFog55(HasFog55) ;})">
                                        <img src="@(OptionsImagePaths[MirrorOption.Fog55W])"
                                             alt="@(languageContainer.Keys[MirrorOptionsDescKey[MirrorOption.Fog55W]])"
                                             style="@((IsFogEnabled(MirrorOption.Fog55W) ? "max-height:120px" : "max-height:120px;filter:grayscale(100%)"))" />
                                        <MudCheckBox T="bool"
                                                     Color="@CheckBoxesColor"
                                                     Dense="true"
                                                     Class="mt-2"
                                                     Disabled="@(!IsFogEnabled(MirrorOption.Fog55W))"
                                                     @bind-Value:get="@HasFog55"
                                                     @bind-Value:set="@SetHasFog55">
                                        </MudCheckBox>
                                    </MudPaper>
                                </ChildContent>
                                <TooltipContent>
                                    <MudContainer Class="d-flex flex-column justify-center align-center ma-0 pa-0">
                                        @if (!IsFogEnabled(MirrorOption.Fog55W))
                                        {
                                            <MudText Typo="Typo.caption">@languageContainer.Keys["CannotChangeOptionForThisMirror"]</MudText>
                                        }
                                        <MudText Typo="Typo.caption">@languageContainer.Keys["DialogFog55Caption"]</MudText>
                                        @if (user.IsPricingVisible)
                                        {
                                            <MudText Typo="Typo.caption">@((MirrorExtra.GetOptionPrice(MirrorOption.Fog55W) * PriceIncreaseFactor).ToString("0.00\u20AC"))</MudText>
                                        }
                                    </MudContainer>
                                </TooltipContent>
                            </MudTooltip>
                        }

                        <!-- 3.Smart-Fog 55Watt -->
                        @*Show Option only if Enabled or Already Part of it*@

                    </MudPaper>
                    <!-- #region 4.Fog SWITCH -->
                    <MudSelect T="@(string)"
                               Label="@languageContainer.Keys["DialogFogTouchCaption"]"
                               FullWidth="true"
                               Variant="@ComboBoxesVariant"
                               Style="min-width:250px;"
                               @bind-Value="@SelectedFogSwitchString"
                               @bind-Disabled="@IsFogSwitchOptionDisabled"
                               Class="ma-4"
                               ToStringFunc="(value=> FogTouchSelectItemDescription(value))">
                        @*Simple Fog Switch*@
                        <MudSelectItem T="string" Value="@(MirrorOption.TouchSwitchFog.ToString())" />
                        @*Eco Fog Switch*@
                        <MudSelectItem T="string" Value="@(MirrorOption.EcoTouch.ToString())" />
                    </MudSelect>
                    <!-- #endregion -->
                </div>
            </fieldset>

            <table style="margin-left:auto;margin-right:auto;user-select:none">
                @if (IsFogEnabled(MirrorOption.Fog16W) || HasFog16)
                {
                    <tr>
                        <td class="mr-2" style="font-weight:bolder">Fog16W</td>
                        <td>| @languageContainer.Keys["DialogFog16Caption"]</td>
                    </tr>
                }
                @if (IsFogEnabled(MirrorOption.Fog24W) || HasFog24)
                {
                    <tr>
                        <td class="mr-2" style="font-weight:bolder">Fog24W</td>
                        <td>| @languageContainer.Keys["DialogFog24Caption"]</td>
                    </tr>
                }
                @if (IsFogEnabled(MirrorOption.Fog55W) || HasFog55)
                {
                    <tr>
                        <td class="mr-2" style="font-weight:bolder">Fog55W</td>
                        <td>|  @languageContainer.Keys["DialogFog55Caption"]</td>
                    </tr>
                }
            </table>
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudContainer Class="d-flex justify-center align-center">
            <MudButton Variant="@ActionButtonVariant"
                       Color="@ActionButtonColor"
                       Style="text-transform:none"
                       Class="ma-4"
                       OnClick="(() => OnPreviousClick.InvokeAsync())">
                @languageContainer.Keys["DialogActionButtonBack"]
            </MudButton>
            @if (dialogNav.GetNextDialog() != MirrorDialog.None)
            {
                <MudButton Variant="@ActionButtonVariant"
                           Color="@ActionButtonColor"
                           Style="text-transform:none"
                           Class="ma-4"
                           OnClick="(() => OnNextClick.InvokeAsync())">
                    @languageContainer.Keys["DialogActionButtonNext"]
                </MudButton>
            }
            else
            {
                <MudButton Variant="@ActionButtonVariant"
                           Color="@ActionButtonColor"
                           Style="text-transform:none"
                           Class="ma-4"
                           OnClick="(() => {IsVisible = false;IsVisibleChanged.InvokeAsync(IsVisible);})">
                    @languageContainer.Keys["DialogActionButtonFinish"]
                </MudButton>
            }
        </MudContainer>
    </DialogActions>
</MudDialog>

@code {


}
