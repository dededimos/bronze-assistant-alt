@* Magnifyers Dialog *@
@namespace BronzeArtWebApplication.Components.MirrorCreationComponents.Dialogs
@using BronzeArtWebApplication.Shared.Services
@inject ILanguageContainerService languageContainer
@inject BronzeUser user
@inject MirrorDialogNavigator dialogNav

<MudDialog @bind-Visible:get="@IsVisible" @bind-Visible:set="@IsVisibleChanged" Gutters="@(false)" Class="ma-4">
    <TitleContent>
        <MudText Typo="Typo.h6">
            @languageContainer.Keys["DialogMagnifyerTitle"]
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudContainer Style="@DialogContainerCssStyle">
            <fieldset class="rounded" style="user-select:none;border:1px solid var(--customDark)">
                <legend style="margin-left: 20px;padding-inline: 10px;display:inline-block">
                    @languageContainer.Keys["DialogMagnifyerFieldsetLegend"]
                </legend>
                <MudPaper Class="d-flex flex-wrap justify-center pa-4" Elevation="0">

                    <!-- 1.Magnifyer -->
                    @*Show Option only if Enabled or Already Part of it*@
                    @if (IsMagnifierEnabled(MirrorOption.Zoom) || HasMagnifyer)
                    {
                        <MudTooltip Placement="@Placement.Top">
                            <ChildContent>
                                <MudPaper Elevation="0"
                                          Outlined="false"
                                          Class="ma-1 pa-1 d-flex flex-column justify-center align-center"
                                          @onclick="((e) => { if(!IsMagnifierEnabled(MirrorOption.Zoom)) return;HasMagnifyer = !HasMagnifyer;HasMagnifyerChanged.InvokeAsync(HasMagnifyer); })">
                                    <img src="@(OptionsImagePaths[MirrorOption.Zoom])"
                                         alt="@(languageContainer.Keys[MirrorOptionsDescKey[MirrorOption.Zoom]])"
                                         style="@((IsMagnifierEnabled(MirrorOption.Zoom) ? "max-height:120px" : "max-height:120px;filter:grayscale(100%)"))" />
                                    <MudCheckBox T="bool"
                                                 Color="@CheckBoxesColor"
                                                 Dense="true"
                                                 Class="mt-2"
                                                 Disabled="@(!IsMagnifierEnabled(MirrorOption.Zoom))"
                                                 @bind-Value:get="@HasMagnifyer"
                                                 @bind-Value:set="@HasMagnifyerChanged">
                                    </MudCheckBox>
                                </MudPaper>
                            </ChildContent>
                            <TooltipContent>
                                <MudContainer Class="d-flex flex-column justify-center align-center ma-0 pa-0">
                                    @if (!IsMagnifierEnabled(MirrorOption.Zoom))
                                    {
                                        <MudText Typo="Typo.caption">@languageContainer.Keys["CannotChangeOptionForThisMirror"]</MudText>
                                    }
                                    <MudText Typo="Typo.caption">@languageContainer.Keys["DialogMagnifyerZoomCaption"]</MudText>
                                    @if (user.IsPricingVisible)
                                    {
                                        <MudText Typo="Typo.caption">@((MirrorExtra.GetOptionPrice(MirrorOption.Zoom) * PriceIncreaseFactor).ToString("0.00\u20AC"))</MudText>
                                    }
                                </MudContainer>
                            </TooltipContent>
                        </MudTooltip>
                    }

                    <!-- 2.Magnifyer LED -->
                    @*Show Option only if Enabled or Already Part of it*@
                    @if (IsMagnifierEnabled(MirrorOption.ZoomLed) || HasMagnifyerLed)
                    {
                        <MudTooltip Placement="@Placement.Top">
                            <ChildContent>
                                <MudPaper Elevation="0"
                                          Outlined="false"
                                          Class="ma-1 pa-1 d-flex flex-column justify-center align-center"
                                          @onclick="((e) => { if(!IsMagnifierEnabled(MirrorOption.ZoomLed)) return;HasMagnifyerLed = !HasMagnifyerLed;HasMagnifyerLedChanged.InvokeAsync(HasMagnifyerLed); })">
                                    <img src="@(OptionsImagePaths[MirrorOption.ZoomLed])"
                                         alt="@(languageContainer.Keys[MirrorOptionsDescKey[MirrorOption.ZoomLed]])"
                                         style="@((IsMagnifierEnabled(MirrorOption.ZoomLed) ? "max-height:120px" : "max-height:120px;filter:grayscale(100%)"))" />
                                    <MudCheckBox T="bool"
                                                 Color="@CheckBoxesColor"
                                                 Dense="true"
                                                 Class="mt-2"
                                                 Disabled="@(!IsMagnifierEnabled(MirrorOption.ZoomLed))"
                                                 @bind-Value:get="@HasMagnifyerLed"
                                                 @bind-Value:set="@HasMagnifyerLedChanged">
                                    </MudCheckBox>
                                </MudPaper>
                            </ChildContent>
                            <TooltipContent>
                                <MudContainer Class="d-flex flex-column justify-center align-center ma-0 pa-0">
                                    @if (!IsMagnifierEnabled(MirrorOption.ZoomLed))
                                    {
                                        <MudText Typo="Typo.caption">@languageContainer.Keys["CannotChangeOptionForThisMirror"]</MudText>
                                    }
                                    <MudText Typo="Typo.caption">@languageContainer.Keys["DialogMagnifyerZoomLedCaption"]</MudText>
                                    @if (user.IsPricingVisible)
                                    {
                                        <MudText Typo="Typo.caption">@((MirrorExtra.GetOptionPrice(MirrorOption.ZoomLed) * PriceIncreaseFactor).ToString("0.00\u20AC"))</MudText>
                                    }
                                </MudContainer>
                            </TooltipContent>
                        </MudTooltip>
                    }

                    <!-- 3.Magnifyer LED Touch -->
                    @*Show Option only if Enabled or Already Part of it*@
                    @if (IsMagnifierEnabled(MirrorOption.ZoomLedTouch) || HasMagnifyerLedTouch)
                    {
                        <MudTooltip Placement="@Placement.Top">
                            <ChildContent>
                                <MudPaper Elevation="0"
                                          Outlined="false"
                                          Class="ma-1 pa-1 d-flex flex-column justify-center align-center"
                                          @onclick="((e) => { if(!IsMagnifierEnabled(MirrorOption.ZoomLedTouch)) return;HasMagnifyerLedTouch = !HasMagnifyerLedTouch;HasMagnifyerLedTouchChanged.InvokeAsync(HasMagnifyerLedTouch); })">
                                    <img src="@(OptionsImagePaths[MirrorOption.ZoomLedTouch])"
                                         alt="@(languageContainer.Keys[MirrorOptionsDescKey[MirrorOption.ZoomLedTouch]])"
                                         style="@((IsMagnifierEnabled(MirrorOption.ZoomLedTouch) ? "max-height:120px" : "max-height:120px;filter:grayscale(100%)"))" />
                                    <MudCheckBox T="bool"
                                                 Color="@CheckBoxesColor"
                                                 Dense="true"
                                                 Class="mt-2"
                                                 Disabled="@(!IsMagnifierEnabled(MirrorOption.ZoomLedTouch))"
                                                 @bind-Value:get="@HasMagnifyerLedTouch"
                                                 @bind-Value:set="@HasMagnifyerLedTouchChanged">
                                    </MudCheckBox>
                                </MudPaper>
                            </ChildContent>
                            <TooltipContent>
                                <MudContainer Class="d-flex flex-column justify-center align-center ma-0 pa-0">
                                    @if (!IsMagnifierEnabled(MirrorOption.ZoomLedTouch))
                                    {
                                        <MudText Typo="Typo.caption">@languageContainer.Keys["CannotChangeOptionForThisMirror"]</MudText>
                                    }
                                    <MudText Typo="Typo.caption">@languageContainer.Keys["DialogMagnifyerZoomLedTouchCaption"]</MudText>
                                    @if (user.IsPricingVisible)
                                    {
                                        <MudText Typo="Typo.caption">@((MirrorExtra.GetOptionPrice(MirrorOption.ZoomLedTouch) * PriceIncreaseFactor).ToString("0.00\u20AC"))</MudText>
                                    }
                                </MudContainer>
                            </TooltipContent>
                        </MudTooltip>
                    }

                </MudPaper>
            </fieldset>

            <table style="margin-left:auto;margin-right:auto;user-select:none">
                @if (IsMagnifierEnabled(MirrorOption.Zoom) || HasMagnifyer)
                {
                    <tr>
                        <td class="mr-2" style="font-weight: bolder; text-align: center">Zoom x3</td>
                        <td>| @languageContainer.Keys["DialogMagnifyerZoomCaption"]</td>
                    </tr>
                }
                @if (IsMagnifierEnabled(MirrorOption.ZoomLed) || HasMagnifyerLed)
                {
                    <tr>
                        <td class="mr-2" style="font-weight:bolder;text-align:center">Zoom &amp; Led</td>
                        <td>| @languageContainer.Keys["DialogMagnifyerZoomLedCaption"] </td>
                    </tr>
                }
                @if (IsMagnifierEnabled(MirrorOption.ZoomLedTouch) || HasMagnifyerLedTouch)
                {
                    <tr>
                        <td class="mr-2" style="font-weight: bolder; text-align: center">Zoom Led &amp; Touch</td>
                        <td>| @languageContainer.Keys["DialogMagnifyerZoomLedTouchCaption"]</td>
                    </tr>
                }
            </table>
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudContainer Class="d-flex justify-center align-center">
            <MudButton Variant="@ActionButtonVariant"
                       Color="@ActionButtonColor"
                       Style="text-transform:none"
                       Class="ma-4"
                       OnClick="(() => OnPreviousClick.InvokeAsync())">
                @languageContainer.Keys["DialogActionButtonBack"]
            </MudButton>
            @if (dialogNav.GetNextDialog() != MirrorDialog.None)
            {
                <MudButton Variant="@ActionButtonVariant"
                           Color="@ActionButtonColor"
                           Style="text-transform:none"
                           Class="ma-4"
                           OnClick="(() => OnNextClick.InvokeAsync())">
                    @languageContainer.Keys["DialogActionButtonNext"]
                </MudButton>
            }
            else
            {
                <MudButton Variant="@ActionButtonVariant"
                           Color="@ActionButtonColor"
                           Style="text-transform:none"
                           Class="ma-4"
                           OnClick="(() => {IsVisible = false;IsVisibleChanged.InvokeAsync(IsVisible);})">
                    @languageContainer.Keys["DialogActionButtonFinish"]
                </MudButton>
            }
        </MudContainer>
    </DialogActions>
</MudDialog>

@code {


}
