@* The Touch Options Selection Dialog *@
@namespace BronzeArtWebApplication.Components.MirrorCreationComponents.Dialogs
@using BronzeArtWebApplication.Shared.Services
@inject ILanguageContainerService languageContainer
@inject BronzeUser user
@inject MirrorDialogNavigator dialogNav

<MudDialog @bind-Visible:get="@IsVisible" @bind-Visible:set="@IsVisibleChanged" Gutters="false" Class="ma-4">
    <TitleContent>
        <MudText Typo="Typo.h6">
            @languageContainer.Keys["DialogTouchTitle"]
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudContainer Style="@($"{DialogContainerCssStyle}")">
            <fieldset class="rounded" style="user-select:none;border:1px solid var(--customDark)">
                <legend style="margin-left:20px;padding-inline:10px;display:inline-block">
                    @languageContainer.Keys["DialogTouchFieldsetLegend"]
                </legend>
                <MudPaper Class="d-flex flex-wrap justify-center pa-4"
                          Elevation="0">
                    <!-- 1.Touch Switch -->

                    @*Will show the Option if its selectable - OR - if its already Selected*@
                    @if (IsTouchEnabled(MirrorOption.TouchSwitch) || HasSwitch)
                    {
                        <MudTooltip Placement="@Placement.Top">
                            <ChildContent>
                                <MudPaper Elevation="0"
                                          Outlined="false"
                                          Class="ma-1 pa-1 d-flex flex-column justify-center align-center"
                                          @onclick="((e) => {if(!IsTouchEnabled(MirrorOption.TouchSwitch)) return;HasSwitch = !HasSwitch;HasSwitchChanged.InvokeAsync(HasSwitch);})">
                                    <img src="@(OptionsImagePaths[MirrorOption.TouchSwitch])"
                                         alt="@(languageContainer.Keys[MirrorOptionsDescKey[MirrorOption.TouchSwitch]])"
                                         style="@((IsTouchEnabled(MirrorOption.TouchSwitch) ? "max-height:120px" : "max-height:120px;filter:grayscale(100%)"))" />
                                    <MudCheckBox T="bool"
                                                 Color="@CheckBoxesColor"
                                                 Dense="true" Class="mt-2"
                                                 Disabled="@(!IsTouchEnabled(MirrorOption.TouchSwitch))"
                                                 @bind-Value:get="@HasSwitch"
                                                 @bind-Value:set="@HasSwitchChanged">
                                    </MudCheckBox>
                                </MudPaper>
                            </ChildContent>
                            <TooltipContent>
                                <MudContainer Class="d-flex flex-column justify-center align-center ma-0 pa-0">
                                    @if (!IsTouchEnabled(MirrorOption.TouchSwitch))
                                    {
                                        <MudText Typo="Typo.caption">@languageContainer.Keys["CannotChangeOptionForThisMirror"]</MudText>
                                    }
                                    <MudText Typo="Typo.caption">@languageContainer.Keys["DialogTouchTouchCaption"]</MudText>
                                    @if (user.IsPricingVisible)
                                    {
                                        <MudText Typo="Typo.caption">@((ExtraPrice(MirrorOption.TouchSwitch) * PriceIncreaseFactor).ToString("0.00\u20AC"))</MudText>
                                    }
                                </MudContainer>
                            </TooltipContent>
                        </MudTooltip>
                    }

                    <!-- 2.Dimmer Switch -->
                    @*Will show the Option if its selectable - OR - if its already Selected*@
                    @if (IsTouchEnabled(MirrorOption.DimmerSwitch) || HasDimmer)
                    {
                        <MudTooltip Placement="@Placement.Top">
                            <ChildContent>
                                <MudPaper Elevation="0"
                                          Outlined="false"
                                          Class="ma-1 pa-1 d-flex flex-column justify-center align-center"
                                          @onclick="((e) => {if(!IsTouchEnabled(MirrorOption.DimmerSwitch)) return;HasDimmer = !HasDimmer;HasDimmerChanged.InvokeAsync(HasDimmer);})">
                                    <img src="@(OptionsImagePaths[MirrorOption.DimmerSwitch])"
                                         alt="@(languageContainer.Keys[MirrorOptionsDescKey[MirrorOption.DimmerSwitch]])"
                                         style="@((IsTouchEnabled(MirrorOption.DimmerSwitch) ? "max-height:120px;" : "max-height:120px;filter:grayscale(100%)"))" />
                                    <MudCheckBox T="bool"
                                                 Color="@CheckBoxesColor"
                                                 Dense="true" Class="mt-2"
                                                 @bind-Value:get="@HasDimmer"
                                                 @bind-Value:set="@HasDimmerChanged"
                                                 Disabled="@(!IsTouchEnabled(MirrorOption.DimmerSwitch))">
                                    </MudCheckBox>
                                </MudPaper>
                            </ChildContent>
                            <TooltipContent>
                                <MudContainer Class="d-flex flex-column justify-center align-center ma-0 pa-0">
                                    @if (!IsTouchEnabled(MirrorOption.DimmerSwitch))
                                    {
                                        <MudText Typo="Typo.caption">@languageContainer.Keys["CannotChangeOptionForThisMirror"]</MudText>
                                    }
                                    <MudText Typo="Typo.caption">@languageContainer.Keys["DialogTouchDimmerCaption"]</MudText>
                                    @if (user.IsPricingVisible)
                                    {
                                        <MudText Typo="Typo.caption">@((ExtraPrice(MirrorOption.DimmerSwitch) * PriceIncreaseFactor).ToString("0.00\u20AC"))</MudText>
                                    }
                                </MudContainer>
                            </TooltipContent>
                        </MudTooltip>
                    }

                    <!-- 3.Sensor Switch -->
                    @*Will show the Option if its selectable - OR - if its already Selected*@
                    @if (IsTouchEnabled(MirrorOption.DimmerSwitch) || HasSensor)
                    {
                        <MudTooltip Placement="@Placement.Top">
                            <ChildContent>
                                <MudPaper Elevation="0"
                                          Outlined="false"
                                          Class="ma-1 pa-1 d-flex flex-column justify-center align-center"
                                          @onclick="((e) => {if(!IsTouchEnabled(MirrorOption.SensorSwitch)) return;HasSensor = !HasSensor;HasSensorChanged.InvokeAsync(HasSensor);})">
                                    <img src="@(OptionsImagePaths[MirrorOption.SensorSwitch])"
                                         alt="@(languageContainer.Keys[MirrorOptionsDescKey[MirrorOption.SensorSwitch]])"
                                         style="@((IsTouchEnabled(MirrorOption.SensorSwitch) ? "max-height:120px;" : "max-height:120px;filter:grayscale(100%)"))" />
                                    <MudCheckBox T="bool"
                                                 Color="@CheckBoxesColor"
                                                 Dense="true" Class="mt-2"
                                                 Disabled="@(!IsTouchEnabled(MirrorOption.SensorSwitch))"
                                                 @bind-Value:get="@HasSensor"
                                                 @bind-Value:set="@HasSensorChanged">
                                    </MudCheckBox>
                                </MudPaper>
                            </ChildContent>
                            <TooltipContent>
                                <MudContainer Class="d-flex flex-column justify-center align-center ma-0 pa-0">
                                    @if (!IsTouchEnabled(MirrorOption.SensorSwitch))
                                    {
                                        <MudText Typo="Typo.caption">@languageContainer.Keys["CannotChangeOptionForThisMirror"]</MudText>
                                    }
                                    <MudText Typo="Typo.caption">@languageContainer.Keys["DialogTouchSensorCaption"]</MudText>
                                    @if (user.IsPricingVisible)
                                    {
                                        <MudText Typo="Typo.caption">@((ExtraPrice(MirrorOption.SensorSwitch) * PriceIncreaseFactor).ToString("0.00\u20AC"))</MudText>
                                    }
                                </MudContainer>
                            </TooltipContent>
                        </MudTooltip>
                    }

                </MudPaper>
            </fieldset>
            <table style="margin-left:auto;margin-right:auto;user-select:none">
                @if (IsTouchEnabled(MirrorOption.TouchSwitch) || HasSwitch)
                {
                    <tr>
                        <td class="mr-2" style="font-weight:bolder">Touch</td>
                        <td>| @languageContainer.Keys["DialogTouchTouchCaption"]</td>
                    </tr>
                }
                @if (IsTouchEnabled(MirrorOption.TouchSwitch) || HasDimmer)
                {
                    <tr>
                        <td class="mr-2" style="font-weight:bolder">Dimmer</td>
                        <td>| @languageContainer.Keys["DialogTouchDimmerCaption"]</td>
                    </tr>
                }
                @if (IsTouchEnabled(MirrorOption.TouchSwitch) || HasSensor)
                {
                    <tr>
                        <td class="mr-2" style="font-weight:bolder">Sensor</td>
                        <td>| @languageContainer.Keys["DialogTouchSensorCaption"]</td>
                    </tr>
                }
            </table>
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudContainer Class="d-flex justify-center align-center">
            <MudButton Variant="@ActionButtonVariant"
                       Color="@ActionButtonColor"
                       Style="text-transform:none"
                       Class="ma-4"
                       OnClick="(() => OnPreviousClick.InvokeAsync())">
                @languageContainer.Keys["DialogActionButtonBack"]
            </MudButton>
            @if (dialogNav.GetNextDialog() != MirrorDialog.None)
            {
                <MudButton Variant="@ActionButtonVariant"
                           Color="@ActionButtonColor"
                           Style="text-transform:none"
                           Class="ma-4"
                           OnClick="(() => OnNextClick.InvokeAsync())">
                    @languageContainer.Keys["DialogActionButtonNext"]
                </MudButton>
            }
            else
            {
                <MudButton Variant="@ActionButtonVariant"
                           Color="@ActionButtonColor"
                           Style="text-transform:none"
                           Class="ma-4"
                           OnClick="(() => {IsVisible = false;IsVisibleChanged.InvokeAsync(IsVisible);})">
                    @languageContainer.Keys["DialogActionButtonFinish"]
                </MudButton>
            }
        </MudContainer>
    </DialogActions>
</MudDialog>


