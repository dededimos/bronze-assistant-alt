@* Gets the Mirror by the Inserted Code *@
@namespace BronzeArtWebApplication.Components.MirrorCreationComponents.InputBoxes
@inject ILanguageContainerService lc

    <MudTextField T="string"
                  @bind-Value="@UserText"
                  Label="@lc.Keys["EnterCodeToGetMirror"]"
                  Variant="@TextBoxVariant"
                  MaxLength="17"
                  OnKeyDown="@OnKeyEventHandler"
                  Class="@Class"
                  Style="@Style"
                  Immediate="true"
                  Margin="@Margin.Dense"
                  Error="@IsTypedTextWrong"
                  ErrorText="@ErrorTextMessage"
              AdornmentIcon="@Icons.Material.Filled.SubdirectoryArrowLeft"
                  Adornment="@Adornment.End"
                  OnAdornmentClick="@(() => OnKeyEventHandler(new KeyboardEventArgs() {Code="Enter"}))">
    </MudTextField>

@code {
    private void OnKeyEventHandler(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            if (UserText.Length >= 4)
            {
                string text = UserText.ToLower();
                text = text.Replace('μ', 'm')
                           .Replace('ρ', 'r')
                           .Replace('χ', 'x')
                           .Replace('ω', 'v')
                           .Replace('η', 'h')
                           .Replace('ν', 'n')
                           .Replace('δ', 'd')
                           .Replace('ν', 'n')
                           .Replace('ι', 'i')
                           .Replace('α', 'a')
                           .Replace('ψ', 'c');

                UserText = text.ToUpper();
            }
            ValidateUserText();

            if (!IsTypedTextWrong) //When the Text passes Validation
            {
                // Invoke the Method that is Tied with the Event Callback by executing CodeTextToMirror method and passing as Argument the Mirror
                OnEnterKeyPressed.InvokeAsync(CodeTextToMirror(UserText));
            }
        }
    }
}
