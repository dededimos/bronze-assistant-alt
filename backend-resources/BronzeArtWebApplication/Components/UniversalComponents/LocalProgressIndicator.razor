@using CommonHelpers
@inject ILanguageContainerService Lc

@if (IsBusy)
{
    <MudOverlay Absolute="@(true)" AutoClose="@(false)" LockScroll="@(true)" LightBackground="@(true)" Visible="@(true)" ZIndex="1500">
        <div class="progressContainer">
            <div style="position:relative;display:flex;justify-content:center;align-items:center;">
                <MudProgressCircular Indeterminate="@((Progress?.TotalSteps ?? 0) > 0 ? false : true)"
                                     Max="@(Progress.TotalSteps)"
                                     Min="@(0)" StrokeWidth="4"
                                     Value="@(Progress.StepsCompleted)"
                                     Style="height:90px;width:90px;"
                                     Color="@(Color.Primary)" />
                @if (ShowPercentage)
                {
                    <div class="progressText" style="position:absolute;margin:auto">
                        @($"{Progress.PercentCompleted:0.00}%")
                    </div>
                }
            </div>
            <MudText Color="@(Color.Primary)">
                @if (ShowStepsCompletion)
                {
                    <div class="progressText">
                        @($"{Progress.CurrentStepDescription} ( {Progress.StepsCompleted}/{Progress.TotalSteps} )")
                    </div>
                }
                else
                {
                    <div class="progressText">
                        @($"{Progress.CurrentStepDescription}")
                    </div>
                }
            </MudText>
            @if (ShowCancelButton)
            {
                <MudButton Class="mt-2" OnClick="@(CancelButtonClick)">@(Lc.Keys["DialogCancel"])</MudButton>
            }
        </div>
    </MudOverlay>
}

@code {
    [Parameter]
    public bool IsBusy { get; set; }
    [Parameter]
    public TaskProgressReport Progress { get; set; }
    [Parameter]
    public bool ShowPercentage { get; set; }
    [Parameter]
    public bool ShowStepsCompletion { get; set; }
    [Parameter]
    public bool ShowCancelButton { get; set; }
    /// <summary>
    /// The Action to Invoke when the Cancel Button is Clicked
    /// </summary>
    [Parameter]
    public EventCallback CancelButtonClick { get; set; }
    
}

