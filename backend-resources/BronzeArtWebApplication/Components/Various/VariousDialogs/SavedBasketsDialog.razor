@using BronzeArtWebApplication.Shared.Services.SaveToStorageServices;
@using BronzeArtWebApplication.Shared.Services;
@using BronzeArtWebApplication.Shared.ViewModels.AccessoriesPageViewModels;

@inject ILanguageContainerService Lc
@inject BasketSaveService saveStore
@inject BronzeUser user
@inject BasketViewModel basket
@inject ISnackbar snackBar

<MudDialog Class="ma-4" Style="max-width:95vw">
    <TitleContent>
        <div style="padding-right:30px;">
            <MudText Typo="@(Typo.h6)">@(Lc.Keys["SavedBaskets"])</MudText>
        </div>
        </TitleContent>
        <DialogContent>
            <div class="contentContainer">
                <MudOverlay 
                    DarkBackground="@(true)" 
                    Visible="@(saveStore.IsBusy)" 
                    AutoClose="@(false)" 
                    Absolute="@(true)"
                    Class="d-flex justify-center align-center mx-n6 mt-n4 mb-n4">
                        <MudProgressCircular Color="@(Color.Primary)" Indeterminate="@(true)">Loading</MudProgressCircular>
                </MudOverlay>
                @if(savedBaskets.Count == 0)
                {
                    <MudStack Row=@(false) Class="justify-center align-center">
                        <MudText>@(Lc.Keys["ThereAreNoSavedBaskets"])</MudText>
                        <MudIcon Size="@(Size.Large)" Icon="@(Icons.Material.Filled.HourglassEmpty)" Color="@(Color.Primary)"/>
                    </MudStack>
                }
                else
                {
                    <table class="custom-table">
                        <thead>
                            <tr class="custom-tr">
                                <th class="custom-headerCell">
                                    <div class="cellContainer-centered">
                                        <MudIcon Icon="@(Icons.Material.Filled.Settings)" Size="@(Size.Small)" Color="@(Color.Primary)" />
                                    </div>
                                </th>
                                <th class="custom-headerCell">@(Lc.Keys["LineNoMin"])</th>
                                <th class="custom-headerCell">@(Lc.Keys["Date"])</th>
                                <th class="custom-headerCell">@(Lc.Keys["BasketName"])</th>
                                <th class="custom-headerCell d-none d-md-table-cell">@(Lc.Keys["BasketItemsQuantity"])</th>
                                @if (basket.PricesEnabled && user.SelectedAppMode == BronzeAppMode.Wholesale)
                                {
                                <th class="custom-headerCell d-none d-md-table-cell">@(Lc.Keys["NetPrice"])<br />@(Lc.Keys["Total"])<br />@(Lc.Keys["WholesaleState"])</th>
                                }
                                @if (basket.PricesEnabled && user.SelectedAppMode is BronzeAppMode.Wholesale or BronzeAppMode.Retail)
                                {
                                <th class="custom-headerCell d-none d-md-table-cell">@(Lc.Keys["NetPrice"])<br />@(Lc.Keys["Total"])<br />@(Lc.Keys["RetailState"])</th>
                                }
                            <th class="custom-headerCell d-none d-md-table-cell">@(Lc.Keys["Notes"])</th>
                                <th class="custom-headerCell">
                                    <div class="cellContainer-centered">
                                        <MudTooltip>
                                            <ChildContent>
                                                <MudIcon Icon="@(Icons.Material.Filled.FileDownload)" Size="@(Size.Small)" Color="@(Color.Primary)" />
                                            </ChildContent>
                                            <TooltipContent>
                                            @(Lc.Keys["Retrieve"])
                                            </TooltipContent>
                                        </MudTooltip>
                                    </div>
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in savedBaskets)
                            {
                                <tr class="custom-tr darkenBackgroundHover" @ondblclick="@(()=> RestoreItemAndClose(item))">
                                    <td class="custom-cell centeredText">
                                            <MudIconButton Icon="@(Icons.Material.Filled.RemoveCircleOutline)"
                                                           Color="@(Color.Error)"
                                                           Size="@(Size.Small)"
                                                           OnClick="@(()=> RemoveSavedBasket(item.BasketName))" />
                                    </td>
                                    <td class="custom-cell centeredText">@(savedBaskets.IndexOf(item) + 1)</td>
                                    <td class="custom-cell centeredText">@(item.TimeStamp.ToString("dd-MM-yyyy HH:mm"))</td>
                                    <td class="custom-cell centeredText" style="word-break:break-word">@(item.BasketName)</td>
                                    <td class="custom-cell rightText d-none d-md-table-cell">@($"{item.SavedProducts.Sum(p => p.Quantity)}{Lc.Keys["pcs"]}")</td>
                                    @if (basket.PricesEnabled && user.SelectedAppMode == BronzeAppMode.Wholesale)
                                    {
                                        <td class="custom-cell rightText d-none d-md-table-cell">@(item.TotalAmount != 0 ? string.Format("{0:0.00€}", item.TotalAmount) : "-")</td>
                                    }
                                    @if (basket.PricesEnabled && user.SelectedAppMode is BronzeAppMode.Wholesale or BronzeAppMode.Retail)
                                    {
                                        <td class="custom-cell rightText d-none d-md-table-cell">@(item.TotalAmounRetail != 0 ? string.Format("{0:0.00€}", item.TotalAmounRetail) : "-")</td>
                                    }
                                    <td class="custom-cell leftText d-none d-md-table-cell" style="word-break:break-word">@(item.BasketNotes)</td>
                                    <td class="custom-cell centeredText">
                                        <MudIconButton Icon="@(Icons.Material.Filled.Downloading)"
                                                   Color="@(Color.Success)"
                                                   Size="@(Size.Small)"
                                                   OnClick="@(()=> RestoreItemAndClose(item))" />
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
        </DialogContent>
        <DialogActions>
            <div class="actionsContainer">
                <MudButton Variant="@(Variant.Outlined)"
                           Color="@(Color.Primary)"
                           Style="text-transform:none"
                           Class="ma-4"
                           OnClick="@(()=> CloseDialog())">
                    @(Lc.Keys[IMessageService.DialogClose])
                </MudButton>
            </div>
    </DialogActions>
</MudDialog>