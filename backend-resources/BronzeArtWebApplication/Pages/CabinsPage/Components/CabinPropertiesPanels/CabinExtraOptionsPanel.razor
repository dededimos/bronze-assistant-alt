@*A Panel Containing Extra Options for A Cabin*@
@namespace BronzeArtWebApplication.Pages.CabinsPage.Components.CabinPropertiesPanels
@using static BronzeArtWebApplication.Shared.Helpers.StaticInfoCabins
@using BronzeArtWebApplication.Components.SVGComponents
@using ShowerEnclosuresModelsLibrary.Enums
@using ShowerEnclosuresModelsLibrary.Enums.ShowerDrawEnums
@using ShowerEnclosuresModelsLibrary.Models.CabinAllParts.PartsModels
@using ShowerEnclosuresModelsLibrary.Models.CabinAllParts.PartsModels.HandlesModels
@using ShowerEnclosuresModelsLibrary.Models.RepositoryModels.Interfaces
@inject AssembleCabinViewModel vm
@inject ILanguageContainerService lc
@inject ICabinMemoryRepository repo

<div id="ExtrasPanelContainer" class="d-flex flex-column justify-center align-center rounded-lg mud-elevation-4">
    <div class="d-flex flex-row justify-center align-center pa-2 rounded-t-lg" style="width:100%;border-bottom:4px solid var(--BronzeDarkPink);background-color:var(--BackgroundColor)">
        <i class="fas fa-cogs fa-2x mr-4"></i>
        <MudText Style="user-select:none" Typo="Typo.h6">@(lc.Keys["AdditionalOptions"])</MudText>
    </div>

    <div id="InnerPanelContainer" class="d-flex flex-wrap justify-center align-center" style="height:100%;width:100%">
        @if (isNBModel || isQBModel || isQPModel || isNPModel)
        {
            <MudButton OnClick="(()=> isRotationMechanismOpen = true)"
                       Class="ma-2">
                <div class="d-flex flex-column justify-center align-center">
                    <MudIcon Icon="@(Icons.Material.Filled.Rotate90DegreesCcw)" Style="font-size:50;height:50px"></MudIcon>
                    <MudText Typo="@(Typo.subtitle2)">@(lc.Keys["WallRotationMechanism"])</MudText>
                </div>
            </MudButton>
            <CabinPartSelectionDialog T="@(CabinPart)"
                                      @bind-IsVisible="@(isRotationMechanismOpen)"
                                      PartsSelectionList="@(GetHingeProfilesSelectionList())"
                                      OnPartSelection="((profile)=> OnHingeProfileSelection(profile))"
                                      SelectedPart="@(InitialSelectedHingeProfile())" />
        }
        <MudMenu AnchorOrigin="@(Origin.BottomCenter)"
                 TransformOrigin="@(Origin.TopCenter)"
                 Dense=@(true)
                 ListClass="ma-0 pa-0">
            <ActivatorContent>
                <MudButton Class="mx-2">
                    <div class="d-flex flex-column justify-center align-center">
                        @*Setting Fill Property of SVG to 'currentColor' inherits the CSS color Property!*@
                        <MudIcon Icon="@(Icons.Material.Filled.Security)"
                                 Size="@(Size.Large)" Style="height:50px" />
                        <MudText Typo="@(Typo.subtitle2)">@(lc.Keys["GlassTreatments"])</MudText>
                    </div>
                </MudButton>
            </ActivatorContent>
            <ChildContent>
                <div style="width:100%;border:1px solid var(--BackgroundColor)" class="d-flex flex-column">
                    <div style="height:40px;border-bottom:2px solid var(--customDark);background-color:var(--BackgroundColor)" class="d-flex align-center justify-center">
                        <MudText Typo="@(Typo.subtitle1)" Style="font-weight:500">@(lc.Keys["GlassTreatments"])</MudText>
                    </div>
                    <div id="additionalsRow"
                         class="d-flex flex-row justify-space-between align-center pa-3"
                         style="width:100%;border-bottom:1px solid var(--BackgroundColor)"
                         @onclick="((e) => {vm.PrimaryCabin.HasBronzeClean = !vm.PrimaryCabin.HasBronzeClean;})">
                        <img src="@(CabinExtraImagePath[CabinExtraType.BronzeClean])"
                             alt="@(lc.Keys[CabinExtraDescKey[CabinExtraType.BronzeClean]])"
                             style="max-height:50px" class="noselect" />
                        <MudText class="noselect mx-2">@lc.Keys["Bronze-Clean"]</MudText>
                        <div class="d-flex flex-row align-center">
                            <MudCheckBox T="bool" UnCheckedColor="@(Color.Primary)" Color="@(Color.Success)" @bind-Value="@(vm.PrimaryCabin.HasBronzeClean)" />
                            <MudTooltip RootClass="mt-1">
                                <ChildContent>
                                    <MudIcon Icon="@(Icons.Material.Outlined.Info)" Color="@(vm.PrimaryCabin.HasBronzeClean ? Color.Success : Color.Primary)" />
                                </ChildContent>
                                <TooltipContent>
                                    <MudText Style="max-width:180px" Typo="Typo.caption">@lc.Keys[CabinExtraFullDescKey[CabinExtraType.BronzeClean]]</MudText>
                                </TooltipContent>
                            </MudTooltip>
                        </div>
                    </div>
                    <div id="additionalsRow"
                         class="d-flex flex-row justify-space-between align-center pa-3 rounded-b-lg"
                         style="width:100%"
                         @onclick="((e) => {vm.PrimaryCabin.HasSafeKids = !vm.PrimaryCabin.HasSafeKids;})">
                        <img src="@(CabinExtraImagePath[CabinExtraType.SafeKids])"
                             alt="@(lc.Keys[CabinExtraDescKey[CabinExtraType.SafeKids]])"
                             style="max-height:50px" class="noselect" />
                        <MudText class="noselect mx-2">@lc.Keys["Safe-Kids"]</MudText>
                        <div class="d-flex flex-row align-center">
                            <MudCheckBox T="bool" UnCheckedColor="@(Color.Primary)" Color="@(Color.Success)" @bind-Value="@(vm.PrimaryCabin.HasSafeKids)" />
                            <MudTooltip RootClass="mt-1">
                                <ChildContent>
                                    <MudIcon Icon="@(Icons.Material.Outlined.Info)" Color="@(vm.PrimaryCabin.HasSafeKids ? Color.Success : Color.Primary)" />
                                </ChildContent>
                                <TooltipContent>
                                    <MudText Style="max-width:180px" Typo="Typo.caption">@lc.Keys[CabinExtraFullDescKey[CabinExtraType.SafeKids]]</MudText>
                                </TooltipContent>
                            </MudTooltip>
                        </div>
                    </div>
                </div>
            </ChildContent>
        </MudMenu>
        @if (vm.PrimaryCabin?.HasHandleOption is true || vm.SecondaryCabin?.HasHandleOption is true || vm.TertiaryCabin?.HasHandleOption is true)
        {
            <MudButton OnClick="(()=> isHandlesOpen = true)" Class="ma-2">
                <div class="d-flex flex-column justify-center align-center">
                    @*Setting Fill Property of SVG to 'currentColor' inherits the CSS color Property!*@
                    <GrabRailSVG Fill="currentColor" RailFill="currentColor" Style="height:50px;" />
                    <MudText Typo="@(Typo.subtitle2)">@(lc.Keys["Handles"])</MudText>
                </div>
            </MudButton>

            <CabinPartSelectionDialog T="@(CabinHandle)"
                                      @bind-IsVisible="@(isHandlesOpen)"
                                      PartsSelectionList="@(GetHandlesSelectionList())"
                                      OnPartSelection="((handle)=> OnHandleSelection(handle))"
                                      SelectedPart="@(InitialSelectedHandle())" />
        }
        @if (vm.PrimaryCabin?.HasBottomFixerOption is true
        || vm.SecondaryCabin?.HasBottomFixerOption is true
        || vm.TertiaryCabin?.HasBottomFixerOption is true)
        {
            <MudButton OnClick="(()=> isBottomFixersOpen = true)" Class="ma-2" Disabled="@(vm.PrimaryCabin.HasPerimetricalFrame)">
                <div class="d-flex flex-column justify-center align-center">
                    <BottomFixingSVG Fill="currentColor" ArrowFill="var(--customPrimary)" Style="height:50px" />
                    <MudText Typo="@(Typo.subtitle2)">@(lc.Keys["BottomFixer"])</MudText>
                </div>
            </MudButton>

            <CabinPartSelectionDialog T="@(CabinPart)"
                                      @bind-IsVisible="@(isBottomFixersOpen)"
                                      PartsSelectionList="@(GetBottomFixerSelectionList())"
                                      OnPartSelection="((fixer)=> OnBottomFixerSelection(fixer))"
                                      SelectedPart="@(InitialSelectedBottomFixer())" />
        }

        @if (vm.PrimaryCabin?.HasWallFixingOption is true || vm.SecondaryCabin?.HasWallFixingOption is true || vm.TertiaryCabin?.HasWallFixingOption is true)
        {
            <MudButton OnClick="(()=> isWallFixingOpen = true)" Class="ma-2" Disabled="@(vm.PrimaryCabin.HasPerimetricalFrame)">
                <div class="d-flex flex-column justify-center align-center">
                    <WallFixingSVG Fill="currentColor" ArrowFill="var(--customPrimary)" Style="height:50px" />
                    <MudText Typo="@(Typo.subtitle2)">@(lc.Keys["WallFixer"])</MudText>
                </div>
            </MudButton>

            <CabinPartSelectionDialog T="@(CabinPart)"
                                      @bind-IsVisible="@(isWallFixingOpen)"
                                      PartsSelectionList="@(GetWallFixerSelectionList())"
                                      OnPartSelection="((fixer)=> OnWallFixerSelection(fixer))"
                                      SelectedPart="@(InitialSelectedWallFixer())" />
        }

        @if (vm.PrimaryCabin?.HasCloseProfileOption is true)
        {
            <MudButton OnClick="(()=> isCloseProfileOpen = true)" Class="ma-2">
                <div class="d-flex flex-column justify-center align-center">
                    <MagneticClosureSVG Fill="currentColor" Style="height:50px" />
                    <MudText Typo="@(Typo.subtitle2)">@(lc.Keys["Closure"])</MudText>
                </div>
            </MudButton>
            <CabinPartSelectionDialog T="@(CabinPart)"
                                      @bind-IsVisible="@(isCloseProfileOpen)"
                                      PartsSelectionList="@(GetCloseProfileSelectionList())"
                                      OnPartSelection="((closer)=> OnCloseProfileSelection(closer))"
                                      SelectedPart="@(InitialSelectedCloseProfile())" />
        }

        @if (vm.PrimaryCabin?.HasMiddleHingeOption is true || vm.SecondaryCabin?.HasMiddleHingeOption is true || vm.TertiaryCabin?.HasMiddleHingeOption is true)
        {
            <MudButton OnClick="(()=> isMiddleHingeOpen = true)" Class="ma-2">
                <div class="d-flex flex-column justify-center align-center">
                    <MiddleMechanismSVG Fill="currentColor" Style="height:50px" />
                    <MudText Typo="@(Typo.subtitle2)">@(lc.Keys["MiddleHinge"])</MudText>
                </div>
            </MudButton>
            <CabinPartSelectionDialog T="@(CabinPart)"
                                      @bind-IsVisible="@(isMiddleHingeOpen)"
                                      PartsSelectionList="@(GetMiddleHingesSelectionList())"
                                      OnPartSelection="((midHinge)=> OnMiddleHingeSelection(midHinge))"
                                      SelectedPart="@(InitialSelectedMiddleHinge())" />
        }
        @if (vm.PrimaryCabin?.CanHavePerimatricalFrame is true)
        {
            <MudCheckBox @bind-Value="@(vm.PrimaryCabin.HasPerimetricalFrame)">
                <MudText>@(lc.Keys["PerimetricalFrameSelection"])</MudText>
            </MudCheckBox>
        }

    </div>
</div>

@code {

}
