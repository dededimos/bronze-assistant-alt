<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:hc="https://handyorg.github.io/handycontrol"
                    xmlns:cc="clr-namespace:TasCustomControlsLibrary.CustomControls;assembly=TasCustomControlsLibrary"
                    xmlns:cachedImage="clr-namespace:CachedImage.Core;assembly=CachedImage.Core"
                    xmlns:dialogVm="clr-namespace:BronzeFactoryApplication.ViewModels.DialogsViewModels"
                    xmlns:dialogView="clr-namespace:BronzeFactoryApplication.Views.Dialogs.DialogViews"
                    xmlns:partModels="clr-namespace:ShowerEnclosuresModelsLibrary.Models.CabinAllParts.PartsModels;assembly=ShowerEnclosuresModelsLibrary"
                    xmlns:TemplateSelectors="clr-namespace:BronzeFactoryApplication.Helpers.TemplateSelectors"
                    xmlns:helpers="clr-namespace:BronzeFactoryApplication.Helpers"
                    xmlns:dr="clr-namespace:SVGDrawingLibrary.Models;assembly=SVGDrawingLibrary"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:CabinModels="clr-namespace:ShowerEnclosuresModelsLibrary.Models;assembly=ShowerEnclosuresModelsLibrary"
                    xmlns:variousUc="clr-namespace:BronzeFactoryApplication.Views.ComponentsUC.Various"
                    xmlns:tasHelps="clr-namespace:BronzeFactoryApplication.Views.HelperViews"
                    xmlns:positionModel="clr-namespace:MirrorsLib.MirrorElements;assembly=MirrorsLib"
                    xmlns:local="clr-namespace:HandyControl.Controls;assembly=HandyControl">

    <Style x:Key="MainWindowStyle"
           TargetType="{x:Type hc:Window}"
           BasedOn="{StaticResource WindowWin10}">
        <Setter Property="FontSize"
                Value="16" />
        <Setter Property="FontFamily"
                Value="Robotto" />
    </Style>

    <Style x:Key="MainWindowSelectionButton"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource ButtonDefault}">
        <Setter Property="FontSize"
                Value="16" />
        <Setter Property="Width"
                Value="190" />
        <Setter Property="Height"
                Value="190" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="hc:BorderElement.CornerRadius"
                Value="15" />
        <Setter Property="Margin"
                Value="5" />
    </Style>

    <!--#region 1. GROUPBOX Styles-->

    <Style x:Key="GroupBoxCabinProperties"
           TargetType="{x:Type GroupBox}"
           BasedOn="{StaticResource GroupBoxBaseStyle}">
        <Setter Property="FontSize"
                Value="16" />
        <Setter Property="Margin"
                Value="10" />
        <Setter Property="Padding"
                Value="10" />
        <Setter Property="hc:TitleElement.Background"
                Value="{DynamicResource RegionBrush}" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GroupBoxConsoleCommandsStyle"
           TargetType="{x:Type GroupBox}"
           BasedOn="{StaticResource GroupBoxCabinProperties}">
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="Padding"
                Value="0,0" />
        <Setter Property="Margin"
                Value="5,0" />
    </Style>
    <!--#endregion-->

    <!--#region 2. TEXTBOX Styles-->

    <Style x:Key="CTextBoxDefaultStyle"
           TargetType="{x:Type hc:TextBox}"
           BasedOn="{StaticResource TextBoxExtendBaseStyle}">
        <Setter Property="Width"
                Value="160" />
        <Setter Property="Margin"
                Value="5" />
    </Style>

    <!--#endregion-->

    <!--#region 3. BUTTONS Styles-->

    <Style x:Key="ConsoleCommandButtonStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource ButtonDefault}">
        <Setter Property="ToolTipService.Placement"
                Value="Right" />
        <Setter Property="ToolTipService.InitialShowDelay"
                Value="0" />
        <Setter Property="Margin"
                Value="0,0,0,5" />
    </Style>

    <Style x:Key="CButtonStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource ButtonDefault}">
        <Setter Property="MinWidth"
                Value="80" />
        <Style.Triggers>
            <Trigger Property="Button.IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource PrimaryBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="CToolBarBigButtonStyle"
           TargetType="Button"
           BasedOn="{StaticResource ButtonDefault}">
        <Setter Property="Height"
                Value="auto" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="ToolTipService.HorizontalOffset"
                Value="-25" />
        <Setter Property="ToolTipService.Placement"
                Value="Bottom" />
        <Setter Property="hc:BorderElement.CornerRadius"
                Value="10" />
        <Style.Triggers>
            <Trigger Property="Button.IsMouseOver"
                     Value="True">
                <Setter Property="Opacity"
                        Value="0.7" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="UndoButton"
           TargetType="Button"
           BasedOn="{StaticResource ButtonDefault}">
        <Setter Property="ToolTip"
                Value="{StaticResource lngUndo}" />
        <Setter Property="ToolTipService.Placement"
                Value="Top" />
        <Setter Property="ToolTipService.VerticalOffset"
                Value="25" />
        <Setter Property="ToolTipService.HorizontalOffset"
                Value="-25" />
        <Setter Property="hc:IconElement.Geometry"
                Value="{StaticResource UndoIconGeometry}" />
        <Setter Property="Foreground"
                Value="{DynamicResource SecondaryBrush}" />
        <Setter Property="ToolTipService.InitialShowDelay"
                Value="0" />
    </Style>
    <Style x:Key="RedoButton"
           TargetType="Button"
           BasedOn="{StaticResource ButtonDefault}">
        <Setter Property="ToolTip"
                Value="{StaticResource lngRedo}" />
        <Setter Property="ToolTipService.Placement"
                Value="Top" />
        <Setter Property="ToolTipService.VerticalOffset"
                Value="25" />
        <Setter Property="ToolTipService.HorizontalOffset"
                Value="-25" />
        <Setter Property="hc:IconElement.Geometry"
                Value="{StaticResource RedoIconGeometry}" />
        <Setter Property="Foreground"
                Value="{DynamicResource SecondaryBrush}" />
        <Setter Property="ToolTipService.InitialShowDelay"
                Value="0" />
    </Style>

    <Style x:Key="SaveButton"
           TargetType="Button"
           BasedOn="{StaticResource ButtonDefault}">
        <Setter Property="Content"
                Value="{StaticResource lngSave}" />
        <Setter Property="hc:IconElement.Geometry"
                Value="{StaticResource SaveGeometry}" />
        <Setter Property="Foreground"
                Value="{DynamicResource SecondaryBrush}" />
    </Style>
    <Style x:Key="AddButtonStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource ButtonIconCircular.Small}">
        <Setter Property="ToolTip"
                Value="{StaticResource lngAdd}" />
        <Setter Property="hc:IconElement.Geometry"
                Value="{StaticResource AddGeometry}" />
        <Setter Property="Foreground"
                Value="{DynamicResource SuccessBrush}" />
    </Style>
    <Style x:Key="RemoveItemButtonStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource ButtonIconCircular.Small}">
        <Setter Property="ToolTip"
                Value="{StaticResource lngRemove}" />
        <Setter Property="hc:IconElement.Geometry"
                Value="{StaticResource RemoveGeometry}" />
        <Setter Property="hc:IconElement.Height"
                Value="8" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource DangerBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource DangerBrush}" />
    </Style>

    <Style x:Key="CopyToClipboardButton"
           TargetType="Button"
           BasedOn="{StaticResource ButtonIcon}">
        <Setter Property="Command"
                Value="{x:Static helpers:GlobalCommands.CopyToClipboardCommand}" />
        <Setter Property="hc:IconElement.Geometry"
                Value="{StaticResource CopyToClipboardGeometry}" />
        <Setter Property="Foreground"
                Value="{DynamicResource SecondaryBrush}" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="ToolTip"
                Value="{StaticResource lngCopyToClipboard}" />
    </Style>

    <Style TargetType="Button"
           BasedOn="{StaticResource ButtonIconCircular.Small}"
           x:Key="EditLocalizedStringVmButtonStyle">
        <Setter Property="Foreground"
                Value="{DynamicResource SecondaryBrush}" />
        <Setter Property="hc:IconElement.Geometry"
                Value="{StaticResource EditGeometry}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource SecondaryBrush}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Margin"
                Value="0,3,5,3" />
        <Setter Property="ToolTip"
                Value="{StaticResource lngEdit}" />
        <Setter Property="ToolTip.Placement"
                Value="Left" />
        <Setter Property="ToolTip.VerticalOffset"
                Value="-15" />
        <Setter Property="ToolTipService.InitialShowDelay"
                Value="0" />
    </Style>

    <!--#endregion-->

    <!--#region 4. TEXTBLOCK Styles-->
    <Style x:Key="CMessageTextBlock"
           TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource TextBlockDefault}">
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryBrush}" />
    </Style>
    <Style x:Key="TitleTextBlockStyle"
           TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource TextBlockDefault}">
        <Setter Property="Margin"
                Value="5,0,0,4" />
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
    </Style>
    <Style x:Key="CTasTitleTextBlockStyle"
           TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource TextBlockDefault}">
        <Setter Property="Margin"
                Value="4,0,0,4" />
        <Setter Property="FontSize"
                Value="12" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
    </Style>
    <Style x:Key="CButtonTextBlock"
           TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource TextBlockDefault}">
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryTextBrush}" />
        <Setter Property="TextWrapping"
                Value="Wrap" />
        <Setter Property="TextAlignment"
                Value="Center" />
        <Setter Property="MaxWidth"
                Value="100" />
    </Style>
    <Style x:Key="CLoaderTextBlock"
           TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource TextBlockDefault}">
        <Setter Property="FontSize"
                Value="12" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="FontWeight"
                Value="SemiBold" />
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryBrush}" />
    </Style>
    <Style x:Key="CSmallInfoTextBlock"
           TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource TextBlockDefault}">
        <Setter Property="FontSize"
                Value="10" />
    </Style>
    <Style x:Key="CMediumInfoTextBlock"
           TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource TextBlockDefault}">
        <Setter Property="FontSize"
                Value="14" />
    </Style>
    <Style x:Key="CHeaderTextBlock"
           TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource TextBlockDefault}">
        <Setter Property="FontSize"
                Value="20" />
    </Style>
    <Style x:Key="CInformativeTextBlock"
           TargetType="TextBlock"
           BasedOn="{StaticResource TextBlockDefault}">
        <Setter Property="FontSize"
                Value="16" />
    </Style>

    <!--#endregion-->

    <!--#region 5.ComboBox Styles -->

    <!--Sets the Templates in the ComboBoxTemplateSelector to use Different Templates in DropDown and SelectedItem-->
    <TemplateSelectors:ComboBoxTemplateSelector x:Key="MirrorPositionObjectTemplateSelector">

        <TemplateSelectors:ComboBoxTemplateSelector.SelectedItemTemplate>
            <DataTemplate DataType="{x:Type positionModel:MirrorElementPosition}">
                <TextBlock Text="{Binding Code}"
                           HorizontalAlignment="Left" />
            </DataTemplate>
        </TemplateSelectors:ComboBoxTemplateSelector.SelectedItemTemplate>
        <TemplateSelectors:ComboBoxTemplateSelector.DropDownTemplate>
            <DataTemplate DataType="{x:Type positionModel:MirrorElementPosition}">
                <StackPanel Orientation="Horizontal"
                            ToolTipService.InitialShowDelay="0"
                            ToolTipService.BetweenShowDelay="0"
                            ToolTipService.Placement="Left"
                            ToolTipService.VerticalOffset="-15"
                            ToolTipService.HorizontalOffset="-15">
                    <StackPanel.ToolTip>
                        <StackPanel>
                            <StackPanel.Resources>
                                <BitmapImage x:Key="DefaultNoImage2"
                                             UriSource="/BronzeFactoryApplication;component/Resources/Images/Icons/QuestionMark.png" />
                            </StackPanel.Resources>
                            <cachedImage:Image ImageUrl="{Binding IconUrl}"
                                               FailedImage="{StaticResource DefaultNoImage2}"
                                               MaxWidth="100"
                                               MaxHeight="100"
                                               Stretch="Uniform"
                                               Margin="0,0,0,10" />
                        </StackPanel>
                    </StackPanel.ToolTip>
                    <TextBlock Text="{Binding Code}"
                               HorizontalAlignment="Left"
                               Width="150" />
                    <TextBlock Text="{Binding LocalizedDescriptionInfo.Name,Converter={StaticResource LocalizedStringMinifiedConverter}}"
                               HorizontalAlignment="Left" />
                </StackPanel>
            </DataTemplate>
        </TemplateSelectors:ComboBoxTemplateSelector.DropDownTemplate>
    </TemplateSelectors:ComboBoxTemplateSelector>
    <TemplateSelectors:ComboBoxTemplateSelector x:Key="ComboBoxPartsTemplateSelector">
        <TemplateSelectors:ComboBoxTemplateSelector.SelectedItemTemplate>
            <DataTemplate DataType="{x:Type partModels:CabinPart}">
                <TextBlock Text="{Binding Description}"
                           HorizontalAlignment="Left" />
            </DataTemplate>
        </TemplateSelectors:ComboBoxTemplateSelector.SelectedItemTemplate>
        <TemplateSelectors:ComboBoxTemplateSelector.DropDownTemplate>
            <DataTemplate DataType="{x:Type partModels:CabinPart}">
                <StackPanel Orientation="Horizontal"
                            ToolTipService.InitialShowDelay="0"
                            ToolTipService.BetweenShowDelay="0"
                            ToolTipService.Placement="Left"
                            ToolTipService.VerticalOffset="-15"
                            ToolTipService.HorizontalOffset="-15">
                    <StackPanel.ToolTip>
                        <StackPanel>
                            <StackPanel.Resources>
                                <BitmapImage x:Key="DefaultNoImage2"
                                             UriSource="/BronzeFactoryApplication;component/Resources/Images/Icons/QuestionMark.png" />
                            </StackPanel.Resources>
                            <cachedImage:Image ImageUrl="{Binding PhotoPath}"
                                               FailedImage="{StaticResource DefaultNoImage2}"
                                               MaxWidth="100"
                                               MaxHeight="100"
                                               Stretch="Uniform"
                                               Margin="0,0,0,10" />
                        </StackPanel>
                    </StackPanel.ToolTip>
                    <TextBlock Text="{Binding Description}"
                               HorizontalAlignment="Left"
                               Width="250" />
                    <TextBlock Text="{Binding Code}"
                               HorizontalAlignment="Left" />
                </StackPanel>
            </DataTemplate>
        </TemplateSelectors:ComboBoxTemplateSelector.DropDownTemplate>
    </TemplateSelectors:ComboBoxTemplateSelector>

    <!--Set to A Combobox with a Cabin ViewModel as DataContext
    The ItemSource of the Combobox are Parts
    This will return Desabled Selectable Parts when their codes are not included in the Default List of the PartsList of the Cabin
    The Spot of the Part is passed to the Tag of the ComboBox-->
    <Style TargetType="ComboBoxItem"
           x:Key="DisablePartWhenNotInListComboboxContainerStyle"
           BasedOn="{StaticResource ComboBoxItemBaseStyle}">
        <Setter Property="IsEnabled">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource CabinPartAndPartsListToEnabledConverter}">
                    <Binding Path="." />
                    <!--Bind to the CabinPart-->
                    <Binding Path="DataContext.Parts"
                             RelativeSource="{RelativeSource AncestorType={x:Type ComboBox}}" />
                    <Binding Path="Tag"
                             RelativeSource="{RelativeSource AncestorType={x:Type ComboBox}}" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="ToolTipService.ShowOnDisabled"
                Value="True" />
        <Setter Property="ToolTipService.InitialShowDelay"
                Value="0" />
        <Setter Property="ToolTipService.Placement"
                Value="Right" />
        <Style.Triggers>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Foreground"
                        Value="{DynamicResource DangerBrush}" />
                <Setter Property="Background"
                        Value="{DynamicResource DarkMaskBrush}" />
                <Setter Property="ToolTip"
                        Value="{StaticResource lngOlderPartConfiguration}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#region 6. MODALS-->

    <!--#endregion-->

    <!--#region 7.Icon Styles -->
    <Style x:Key="WindowMenuIconStyle"
           TargetType="cc:Icon"
           BasedOn="{StaticResource CustomIconBaseStyle}">
        <Setter Property="Height"
                Value="16" />
        <Setter Property="Fill"
                Value="{DynamicResource PrimaryBrush}" />
    </Style>

    <Style x:Key="MainWindowButtonIconStyle"
           TargetType="cc:Icon"
           BasedOn="{StaticResource CustomIconBaseStyle}">
        <Setter Property="Height"
                Value="60" />
        <Setter Property="Margin"
                Value="0,0,0,30" />
        <Setter Property="Fill"
                Value="{DynamicResource PrimaryBrush}" />
    </Style>
    
    <Style TargetType="ToolTip" BasedOn="{StaticResource ToolTipBaseStyle}">
        <Setter Property="Foreground"
                Value="{DynamicResource AccentBrush}" />
    </Style>
    
    <Style x:Key="CInfoTooltipIcon"
           TargetType="{x:Type cc:Icon}"
           BasedOn="{StaticResource CustomIconBaseStyle}">
        <Setter Property="ToolTipService.Placement"
                Value="Top" />
        <Setter Property="ToolTipService.HorizontalOffset"
                Value="-125" />
        <Setter Property="ToolTipService.InitialShowDelay"
                Value="0" />
        <Setter Property="ToolTipService.BetweenShowDelay"
                Value="0" />
        <Setter Property="ToolTipService.ShowOnDisabled"
                Value="True" />
        <Setter Property="Width"
                Value="12" />
        <Setter Property="Margin"
                Value="5,0,5,5" />
        <Setter Property="GeometryData"
                Value="{StaticResource InfoGeometry}" />
        <Setter Property="Fill"
                Value="{DynamicResource SecondaryBrush}" />
        <Setter Property="DockPanel.Dock"
                Value="Right" />
        <Setter Property="IsTabStop"
                Value="False" />
    </Style>
    <Style x:Key="CTasInfoTooltipIcon"
           TargetType="{x:Type cc:Icon}"
           BasedOn="{StaticResource CustomIconBaseStyle}">
        <Setter Property="ToolTipService.Placement"
                Value="Top" />
        <Setter Property="ToolTipService.HorizontalOffset"
                Value="-125" />
        <Setter Property="ToolTipService.InitialShowDelay"
                Value="0" />
        <Setter Property="ToolTipService.BetweenShowDelay"
                Value="0" />
        <Setter Property="ToolTipService.ShowOnDisabled"
                Value="True" />
        <Setter Property="Width"
                Value="12" />
        <Setter Property="Margin"
                Value="10,0,4,2" />
        <Setter Property="GeometryData"
                Value="{StaticResource InfoGeometry}" />
        <Setter Property="Fill"
                Value="{DynamicResource SecondaryBrush}" />
        <Setter Property="DockPanel.Dock"
                Value="Right" />
        <Setter Property="IsTabStop"
                Value="False" />
    </Style>

    <Style x:Key="CBigToolBarButtonImage"
           TargetType="Image">
        <Setter Property="Height"
                Value="70" />
        <Setter Property="Stretch"
                Value="Uniform" />
        <Setter Property="DockPanel.Dock"
                Value="Top" />
    </Style>

    <!--#endregion-->

    <!--#region 8. CheckBox - ToggleButton -->
    <Style TargetType="CheckBox"
           BasedOn="{StaticResource CheckBoxBaseStyle}">
        <Setter Property="Background"
                Value="{DynamicResource RegionBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryBrush}" />
    </Style>

    <Style x:Key="LockToggleButton"
           TargetType="ToggleButton"
           BasedOn="{StaticResource ToggleButtonCustom}">
        <Setter Property="ToolTipService.Placement"
                Value="Right" />
        <Setter Property="ToolTipService.VerticalOffset"
                Value="-20" />
        <Setter Property="Margin"
                Value="3,0,0,3" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <cc:Icon GeometryData="{StaticResource LockedGeometry}"
                                     Height="15"
                                     Fill="{DynamicResource SecondaryBrush}">
                                <cc:Icon.RenderTransform>
                                    <RotateTransform CenterX="7.5"
                                                     CenterY="7.5"
                                                     Angle="180" />
                                </cc:Icon.RenderTransform>
                            </cc:Icon>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="False">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <cc:Icon GeometryData="{StaticResource UnlockedGeometry}"
                                     Height="15"
                                     Fill="{DynamicResource PrimaryBrush}">
                                <cc:Icon.RenderTransform>
                                    <RotateTransform CenterX="7.5"
                                                     CenterY="7.5"
                                                     Angle="180" />
                                </cc:Icon.RenderTransform>
                            </cc:Icon>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LinkUnlinkToggleButton"
           TargetType="ToggleButton"
           BasedOn="{StaticResource ToggleButtonCustom}">
        <Style.Triggers>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <cc:Icon GeometryData="{StaticResource UnlinkGeometry}"
                                     Height="15"
                                     Fill="{DynamicResource SecondaryBrush}"
                                     ToolTip="{StaticResource lngDisableMatching}"
                                     ToolTipService.InitialShowDelay="0"
                                     ToolTipService.Placement="Top"
                                     ToolTipService.HorizontalOffset="-100"
                                     ToolTipService.VerticalOffset="0">
                            </cc:Icon>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="False">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <cc:Icon GeometryData="{StaticResource LinkGeometry}"
                                     Height="15"
                                     Fill="{DynamicResource SecondaryBrush}"
                                     ToolTip="{StaticResource lngEnableMatching}"
                                     ToolTipService.InitialShowDelay="0"
                                     ToolTipService.Placement="Top"
                                     ToolTipService.HorizontalOffset="-100"
                                     ToolTipService.VerticalOffset="0">
                            </cc:Icon>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GroupingToggleButton"
           TargetType="ToggleButton"
           BasedOn="{StaticResource ToggleButtonCustom}">
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="IsChecked"
                Value="True" />
        <Style.Triggers>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <cc:Icon GeometryData="{StaticResource UnGroupGeometry}"
                                     Height="15"
                                     Fill="{DynamicResource SecondaryBrush}"
                                     ToolTip="{StaticResource lngUngroupItems}"
                                     ToolTipService.Placement="Top"
                                     ToolTipService.InitialShowDelay="0"
                                     ToolTipService.HorizontalOffset="-100"
                                     ToolTipService.VerticalOffset="20"
                                     RenderTransform="{StaticResource FlipVertically}"
                                     RenderTransformOrigin="0.5,0.6"
                                     Padding="0">
                            </cc:Icon>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="False">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <cc:Icon GeometryData="{StaticResource GroupGeometry}"
                                     Height="15"
                                     Fill="{DynamicResource SecondaryBrush}"
                                     ToolTip="{StaticResource lngGroupItems}"
                                     ToolTipService.Placement="Top"
                                     ToolTipService.InitialShowDelay="0"
                                     ToolTipService.HorizontalOffset="-70"
                                     ToolTipService.VerticalOffset="20"
                                     RenderTransform="{StaticResource FlipVertically}"
                                     RenderTransformOrigin="0.5,0.6"
                                     Padding="0">
                            </cc:Icon>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MatchingToggleButton"
           TargetType="ToggleButton"
           BasedOn="{StaticResource ToggleButtonCustom}">
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Style.Triggers>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{StaticResource lngGlassMatchesFound}" />
                                <cc:Icon GeometryData="{StaticResource CompletedGeometry}"
                                         Height="12"
                                         Margin="5,0,0,0"
                                         Fill="{DynamicResource SuccessBrush}"
                                         Padding="0">
                                </cc:Icon>
                            </StackPanel>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="False">
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{StaticResource lngGlassMatchesNotFound}" />
                                <cc:Icon GeometryData="{StaticResource ErrorGeometry}"
                                         Height="10"
                                         Margin="6,2,0,0"
                                         Fill="{DynamicResource DangerBrush}"
                                         Padding="0">
                                </cc:Icon>
                            </StackPanel>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#region 9. DataGrid Various -->
    <Style x:Key="CenteredDataGridColumnHeader"
           TargetType="DataGridColumnHeader"
           BasedOn="{StaticResource DataGridColumnHeaderStyle}">
        <Setter Property="HorizontalAlignment"
                Value="Center" />
    </Style>
    <Style x:Key="CenteredDataGridColumnHeaderSmall"
           TargetType="DataGridColumnHeader"
           BasedOn="{StaticResource DataGridColumnHeaderStyle.Small}">
        <Setter Property="HorizontalAlignment"
                Value="Center" />
    </Style>
    <Style x:Key="MirrorsRepoManagerDatagrid"
           TargetType="DataGrid"
           BasedOn="{StaticResource DataGrid.Small}">
        <Setter Property="Height"
                Value="600" />
        <Setter Property="RowHeight"
                Value="30" />
        <Setter Property="CellStyle"
                Value="{DynamicResource CenteredDataGridCellSmall}" />
        <Setter Property="ColumnHeaderStyle"
                Value="{DynamicResource CenteredDataGridColumnHeaderSmall}" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="EnableRowVirtualization"
                Value="True" />
        <Setter Property="hc:DataGridAttach.ShowRowNumber"
                Value="True" />
        <Setter Property="Padding"
                Value="20" />
        <Setter Property="Margin"
                Value="20" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="IsReadOnly"
                Value="True" />
        <Setter Property="AutoGenerateColumns"
                Value="False" />
        <Setter Property="CanUserAddRows"
                Value="False" />
        <Setter Property="CanUserReorderColumns"
                Value="True" />
        <Setter Property="CanUserResizeColumns"
                Value="False" />
        <Setter Property="CanUserResizeRows"
                Value="False" />
        <Setter Property="SelectionUnit"
                Value="FullRow" />
        <Setter Property="SelectionMode"
                Value="Single" />
        <Setter Property="CanUserSortColumns"
                Value="True" />
    </Style>

    <DataTemplate x:Key="DatagridNotesHeaderTemplate">
        <cc:Icon GeometryData="{StaticResource NotesGeometry}"
                 Height="18"
                 Fill="{DynamicResource PrimaryTextBrush}"
                 ToolTip="{StaticResource lngNotes}"
                 ToolTipService.Placement="Top"
                 ToolTipService.HorizontalOffset="-35" />
    </DataTemplate>

    <DataTemplate x:Key="DatagridStepCutHeaderTemplate">
        <cc:Icon GeometryData="{StaticResource StepCutGeometry}"
                 Height="18"
                 Fill="{DynamicResource PrimaryTextBrush}"
                 ToolTip="{StaticResource lngStepCut}"
                 ToolTipService.Placement="Top"
                 ToolTipService.HorizontalOffset="-35" />
    </DataTemplate>

    <DataTemplate x:Key="DatagridIsStockHeaderTemplate">
        <cc:Icon GeometryData="{StaticResource PackageGeometry}"
                 Height="18"
                 Fill="{DynamicResource PrimaryTextBrush}"
                 ToolTip="{StaticResource lngIsStockTooltip}"
                 ToolTipService.Placement="Top"
                 ToolTipService.HorizontalOffset="-35" />
    </DataTemplate>

    <Style x:Key="CCenteredDatagridCell"
           TargetType="DataGridCell"
           BasedOn="{StaticResource DataGridCellStyle}">
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="7,0,0,0" />
    </Style>

    <Style x:Key="CenteredDataGridCellSmall"
           TargetType="DataGridCell"
           BasedOn="{StaticResource DataGridCellStyle.Small}">
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="7,0,0,0" />
    </Style>
    <Style x:Key="RightDataGridCellSmall"
           TargetType="DataGridCell"
           BasedOn="{StaticResource DataGridCellStyle.Small}">
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="HorizontalContentAlignment"
                Value="Right" />
        <Setter Property="Padding"
                Value="7,0,7,0" />
    </Style>
    <Style x:Key="LeftDataGridCellSmall"
           TargetType="DataGridCell"
           BasedOn="{StaticResource DataGridCellStyle.Small}">
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="Padding"
                Value="7,0,7,0" />
    </Style>

    <Style x:Key="SmallDataGridRow"
           TargetType="DataGridRow"
           BasedOn="{StaticResource DataGridRowStyle.Small}">
        
    </Style>


    <Style x:Key="CDataGrid"
           TargetType="DataGrid"
           BasedOn="{StaticResource DataGridBaseStyle}">
        <Setter Property="IsReadOnly"
                Value="True" />
        <Setter Property="AutoGenerateColumns"
                Value="False" />
        <Setter Property="CanUserAddRows"
                Value="False" />
        <Setter Property="CanUserReorderColumns"
                Value="True" />
        <Setter Property="CanUserResizeColumns"
                Value="False" />
        <Setter Property="CanUserResizeRows"
                Value="False" />
        <Setter Property="SelectionUnit"
                Value="FullRow" />
        <Setter Property="SelectionMode"
                Value="Single" />
        <Setter Property="CanUserSortColumns"
                Value="True" />
    </Style>

    <Style x:Key="CDataGridSmall"
           TargetType="DataGrid"
           BasedOn="{StaticResource DataGrid.Small}">
        <Setter Property="IsReadOnly"
                Value="True" />
        <Setter Property="AutoGenerateColumns"
                Value="False" />
        <Setter Property="CanUserAddRows"
                Value="False" />
        <Setter Property="CanUserReorderColumns"
                Value="True" />
        <Setter Property="CanUserResizeColumns"
                Value="False" />
        <Setter Property="CanUserResizeRows"
                Value="False" />
        <Setter Property="SelectionUnit"
                Value="FullRow" />
        <Setter Property="SelectionMode"
                Value="Single" />
        <Setter Property="CanUserSortColumns"
                Value="True" />
        <Setter Property="RowStyle"
                Value="{StaticResource SmallDataGridRow}" />
        <Setter Property="ColumnHeaderStyle"
                Value="{StaticResource CenteredDataGridColumnHeaderSmall}" />
    </Style>


    <!--#endregion-->

    <!--#region 10. Dividers -->
    <Style x:Key="VerticalDivider"
           TargetType="{x:Type hc:Divider}"
           BasedOn="{StaticResource DividerBaseStyle}">
        <Setter Property="Orientation"
                Value="Vertical" />
        <Setter Property="Width"
                Value="25" />
        <Setter Property="Height"
                Value="150" />
        <Setter Property="LineStroke"
                Value="{DynamicResource PrimaryBrush}" />
        <Setter Property="LineStrokeThickness"
                Value="0.5" />
    </Style>
    <!--#endregion-->

    <!--#region 11.Loaders -->

    <!--#endregion-->

    <!--#region 12.Visual Brushes -->
    <VisualBrush x:Key="HatchPattern"
                 TileMode="Tile"
                 Viewport="0,0,40,20"
                 ViewportUnits="Absolute"
                 Viewbox="0,0,40,20"
                 ViewboxUnits="Absolute">
        <VisualBrush.Visual>
            <Grid Background="{DynamicResource SecondaryRegionBrush}">
                <Path Data="M 0 0 L 40 0"
                      Stroke="{DynamicResource PrimaryBrush}"
                      PresentationOptions:Freeze="True" />
                <Path Data="M 0 10 L 40 10"
                      Stroke="{DynamicResource PrimaryBrush}"
                      PresentationOptions:Freeze="True" />
                <Path Data="M 5 0 L 5 10"
                      Stroke="{DynamicResource PrimaryBrush}"
                      PresentationOptions:Freeze="True" />
                <Path Data="M 25 0 L 25 10"
                      Stroke="{DynamicResource PrimaryBrush}"
                      PresentationOptions:Freeze="True" />
                <Path Data="M 15 10 L 15 20"
                      Stroke="{DynamicResource PrimaryBrush}"
                      PresentationOptions:Freeze="True" />
                <Path Data="M 35 10 L 35 20"
                      Stroke="{DynamicResource PrimaryBrush}"
                      PresentationOptions:Freeze="True" />
                <Path Data="M 0 20 L 40 20"
                      Stroke="{DynamicResource PrimaryBrush}"
                      PresentationOptions:Freeze="True" />
            </Grid>
        </VisualBrush.Visual>
    </VisualBrush>
    <VisualBrush x:Key="BiggerHatchPattern"
                 TileMode="Tile"
                 Viewport="0,0,120,52"
                 ViewportUnits="Absolute"
                 Viewbox="0,0,40,20"
                 ViewboxUnits="Absolute">
        <VisualBrush.Visual>
            <Grid Background="{DynamicResource SecondaryRegionBrush}">
                <Path Data="M 0 0 L 40 0"
                      Stroke="{DynamicResource PrimaryBrush}"
                      PresentationOptions:Freeze="True" />
                <Path Data="M 0 10 L 40 10"
                      Stroke="{DynamicResource PrimaryBrush}"
                      PresentationOptions:Freeze="True" />
                <Path Data="M 5 0 L 5 10"
                      Stroke="{DynamicResource PrimaryBrush}"
                      PresentationOptions:Freeze="True" />
                <Path Data="M 25 0 L 25 10"
                      Stroke="{DynamicResource PrimaryBrush}"
                      PresentationOptions:Freeze="True" />
                <Path Data="M 15 10 L 15 20"
                      Stroke="{DynamicResource PrimaryBrush}"
                      PresentationOptions:Freeze="True" />
                <Path Data="M 35 10 L 35 20"
                      Stroke="{DynamicResource PrimaryBrush}"
                      PresentationOptions:Freeze="True" />
                <Path Data="M 0 20 L 40 20"
                      Stroke="{DynamicResource PrimaryBrush}"
                      PresentationOptions:Freeze="True" />
            </Grid>
        </VisualBrush.Visual>
    </VisualBrush>
    <!--#endregion-->

    <!--#region 13.Borders -->
    <Style TargetType="Border"
           x:Key="CPhotoControlBorder">
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="CornerRadius"
                Value="10" />
        <Setter Property="BorderBrush"
                Value="{StaticResource SecondaryBorderBrush}" />
        <Setter Property="Padding"
                Value="0,5,10,5" />
    </Style>
    <!--#endregion-->

    <!--#region 14. TasLocalized String Edit Control -->
    <Style TargetType="tasHelps:TasLocalizedStringView"
           x:Key="DescriptionInfoLocalziedStringViewStyle">
        <Setter Property="TranslatedTextMaxWidth"
                Value="250" />
        <Setter Property="PropertyNameMaxWidth"
                Value="120" />
        <Setter Property="PropertyNameTextBlockWidth"
                Value="120" />
        <Setter Property="Width"
                Value="370" />
    </Style>

    <!--#endregion-->

    <!--#region **DataTemplates Various Representations -->
    <DataTemplate x:Key="CabinListBoxItemTemplate"
                  DataType="{x:Type CabinModels:Cabin}">
        <StackPanel>
            <StackPanel HorizontalAlignment="Center"
                        Margin="5">
                <variousUc:CabinSideImageUC DrawNumber="{Binding IsPartOfDraw}"
                                            SynthesisModel="{Binding SynthesisModel}" />
                <TextBlock Text="{Binding .}"
                           HorizontalAlignment="Center"
                           Margin="0,5,0,0" />
            </StackPanel>
            <ListBox ItemsSource="{Binding Glasses}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Margin="5"
                                   Text="{Binding Converter={StaticResource GlassToStringConverter}, Path=.}" />
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </StackPanel>
    </DataTemplate>
    <!--#endregion-->

</ResourceDictionary>
