<UserControl x:Class="BronzeFactoryApplication.Views.ComponentsUC.DrawsRelevantUcs.TechnicalDrawingViewUC"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:BronzeFactoryApplication.Views.ComponentsUC.DrawsRelevantUcs"
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:vm="clr-namespace:BronzeFactoryApplication.ViewModels.ComponentsUCViewModels.DrawsViewModels"
             xmlns:drawingVm="clr-namespace:BronzeFactoryApplication.ViewModels.DrawingsViewModels"
             xmlns:helperVw="clr-namespace:BronzeFactoryApplication.Views.HelperViews"
             xmlns:drawingEnums="clr-namespace:DrawingLibrary.Enums;assembly=DrawingLibrary"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:cc="clr-namespace:TasCustomControlsLibrary.CustomControls;assembly=TasCustomControlsLibrary"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"
             x:Name="drawingUC"
             ClipToBounds="True"
             d:DataContext="{d:DesignInstance Type=drawingVm:TechnicalDrawingViewModel}">
    <UserControl.Resources>
        <!--Line Hatch Patterns Various -->
        <Rect x:Key="DotViewPortSize">0,0,3,3</Rect>
        <sys:Double x:Key="DotSize">0.6</sys:Double>
        <Point x:Key="DotCenter">0,0</Point>
        
        <sys:Double x:Key="HatchLineThickness">0.6</sys:Double>
        <Rect x:Key="HatchLineGapRectangle">0,0,5,5</Rect>
        
        <Point x:Key="HatchLine45Start">0,5</Point>
        <Point x:Key="HatchLine45End">5,0</Point>
        
        <Point x:Key="HatchLine225Start">0,0</Point>
        <Point x:Key="HatchLine225End">5,5</Point>
        
        <Point x:Key="HatchLine0Start">0,2.5</Point>
        <Point x:Key="HatchLine0End">5,2.5</Point>
        
        <Point x:Key="HatchLine90Start">2.5,0</Point>
        <Point x:Key="HatchLine90End">2.5,5</Point>
        
        <Storyboard x:Key="FadeInStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                             From="0"
                             To="1"
                             Duration="0:0:0.3" />
        </Storyboard>
        <!--<Storyboard x:Key="DrawPathStoryboard">
            -->
        <!-- Start with a large offset to hide the line -->
        <!-- Animate the offset to zero, revealing the line -->
        <!-- Clear dashes: Remove dashes from the stroke by clearing the StrokeDashArray -->
        <!-- Starts after the stroke animation ends -->
        <!--
            <DoubleAnimation Storyboard.TargetProperty="StrokeDashOffset"
                             From="1000" 
                             To="0"
                             Duration="0:0:5"
                             AutoReverse="False"/>
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="StrokeDashArray"
                                               BeginTime="0:0:5">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0">
                        <DiscreteObjectKeyFrame.Value>
                            <DoubleCollection />
                        </DiscreteObjectKeyFrame.Value>
                    </DiscreteObjectKeyFrame>
                </ObjectAnimationUsingKeyFrames>
        </Storyboard>-->
        
        <!--#region Shapes Template -->
        <DataTemplate DataType="{x:Type drawingVm:DrawingViewModel}"
                      x:Key="ShapeDataTemplate">
            <Grid>
                <Grid.Triggers>
                    <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                        <BeginStoryboard Storyboard="{StaticResource FadeInStoryboard}" />
                    </EventTrigger>
                </Grid.Triggers>

                <Path Data="{Binding PathDataGeometry}"
                      StrokeLineJoin="Round"
                      Panel.ZIndex="{Binding LayerNo}"
                      x:Name="myPath">
                    <!--Conditionally Use the Shadow Effect According to the Presentation Options-->
                    <Path.Style>
                        <Style TargetType="Path">
                            <Setter Property="StrokeDashArray"
                                    Value="{Binding PresentationOptions.StrokeDashArray,Converter={StaticResource listOfDoubleToDoubleCollectionConverter}}" />
                            <Setter Property="Stroke"
                                    Value="{Binding PresentationOptions.Stroke.BrushModel,Converter={StaticResource drawBrushToBrushConverter}}" />
                            <Setter Property="StrokeThickness"
                                    Value="{Binding PresentationOptions.StrokeThickness}" />
                            <Setter Property="Effect"
                                    Value="{x:Null}" />
                            <Setter Property="Opacity"
                                    Value="{Binding PresentationOptions.Opacity}" />
                            <!-- Default Fill Binding -->
                            <Setter Property="Fill"
                                    Value="{Binding PresentationOptions.Fill.BrushModel,Converter={StaticResource drawBrushToBrushConverter}}" />
                            <Style.Triggers>

                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter Property="Stroke"
                                            Value="{DynamicResource SecondaryBrush}" />
                                    <Setter Property="StrokeThickness"
                                            Value="2" />
                                    <Setter Property="Opacity"
                                            Value="0.8" />
                                    <!-- Apply a default DashArray if none is set -->
                                    <Setter Property="StrokeDashArray"
                                            Value="20,20" />

                                    <!-- Storyboard animation for DashOffset -->
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard RepeatBehavior="Forever">
                                                <DoubleAnimation Storyboard.TargetProperty="(Path.StrokeDashOffset)"
                                                                 From="0"
                                                                 To="40"
                                                                 Duration="0:0:1"
                                                                 AutoReverse="False" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <!-- Stop animation when MouseOver ends -->
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="(Path.StrokeDashOffset)"
                                                                 To="0"
                                                                 Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <!--#region Shadow Data Trigger -->
                                <DataTrigger Binding="{Binding PresentationOptions.UseShadow}"
                                             Value="True">
                                    <Setter Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect BlurRadius="10"
                                                              ShadowDepth="15"
                                                              Color="Black"
                                                              Opacity="0.5" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <!--#endregion-->
                                <!--#region DotPattern -->
                                <DataTrigger Binding="{Binding PresentationOptions.FillPattern}"
                                             Value="{x:Static drawingEnums:FillPatternType.DotPattern}">
                                    <Setter Property="Fill">
                                        <Setter.Value>
                                            <DrawingBrush x:Name="DotPatternBrush"
                                                          TileMode="Tile"
                                                          Viewport="{StaticResource DotViewPortSize}"
                                                          ViewportUnits="Absolute"
                                                          Viewbox="{StaticResource DotViewPortSize}"
                                                          ViewboxUnits="Absolute">
                                                <DrawingBrush.Drawing>
                                                    <DrawingGroup>
                                                        <GeometryDrawing Brush="{Binding PresentationOptions.Fill.BrushModel,Converter={StaticResource drawBrushToBrushConverter}}">
                                                            <GeometryDrawing.Geometry>
                                                                <EllipseGeometry Center="{StaticResource DotCenter}"
                                                                                 RadiusX="{StaticResource DotSize}"
                                                                                 RadiusY="{StaticResource DotSize}" />
                                                            </GeometryDrawing.Geometry>
                                                        </GeometryDrawing>
                                                    </DrawingGroup>
                                                </DrawingBrush.Drawing>
                                            </DrawingBrush>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <!--#endregion-->
                                <!--#region LinePattern45 -->
                                <DataTrigger Binding="{Binding PresentationOptions.FillPattern}"
                                             Value="{x:Static drawingEnums:FillPatternType.HatchLine45DegPattern}">
                                    <Setter Property="Fill">
                                        <Setter.Value>
                                            <DrawingBrush TileMode="Tile"
                                                          Viewport="{StaticResource HatchLineGapRectangle}"
                                                          ViewportUnits="Absolute"
                                                          Viewbox="{StaticResource HatchLineGapRectangle}"
                                                          ViewboxUnits="Absolute"
                                                          Stretch="Fill"
                                                          AlignmentX="Left"
                                                          AlignmentY="Top">
                                                <DrawingBrush.Drawing>
                                                    <GeometryDrawing>
                                                        <GeometryDrawing.Geometry>
                                                            <LineGeometry StartPoint="{StaticResource HatchLine45Start}"
                                                                          EndPoint="{StaticResource HatchLine45End}" />
                                                        </GeometryDrawing.Geometry>
                                                        <GeometryDrawing.Pen>
                                                            <Pen Thickness="{StaticResource HatchLineThickness}"
                                                                 Brush="{Binding PresentationOptions.Fill.BrushModel,Converter={StaticResource drawBrushToBrushConverter}}" />
                                                        </GeometryDrawing.Pen>
                                                    </GeometryDrawing>
                                                </DrawingBrush.Drawing>
                                            </DrawingBrush>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <!--#endregion-->
                                <!--#region LinePattern225 -->
                                <DataTrigger Binding="{Binding PresentationOptions.FillPattern}"
                                             Value="{x:Static drawingEnums:FillPatternType.HatchLine225DegPattern}">
                                    <Setter Property="Fill">
                                        <Setter.Value>
                                            <DrawingBrush TileMode="Tile"
                                                          Viewport="{StaticResource HatchLineGapRectangle}"
                                                          ViewportUnits="Absolute"
                                                          Viewbox="{StaticResource HatchLineGapRectangle}"
                                                          ViewboxUnits="Absolute"
                                                          Stretch="Fill"
                                                          AlignmentX="Left"
                                                          AlignmentY="Top">
                                                <DrawingBrush.Drawing>
                                                    <GeometryDrawing>
                                                        <GeometryDrawing.Geometry>
                                                            <LineGeometry StartPoint="{StaticResource HatchLine225Start}"
                                                                          EndPoint="{StaticResource HatchLine225End}" />
                                                        </GeometryDrawing.Geometry>
                                                        <GeometryDrawing.Pen>
                                                            <Pen Thickness="{StaticResource HatchLineThickness}"
                                                                 Brush="{Binding PresentationOptions.Fill.BrushModel,Converter={StaticResource drawBrushToBrushConverter}}" />
                                                        </GeometryDrawing.Pen>
                                                    </GeometryDrawing>
                                                </DrawingBrush.Drawing>
                                            </DrawingBrush>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <!--#endregion-->
                                <!--#region LinePattern0 -->
                                <DataTrigger Binding="{Binding PresentationOptions.FillPattern}"
                                             Value="{x:Static drawingEnums:FillPatternType.HatchLineHorizontalPattern}">
                                    <Setter Property="Fill">
                                        <Setter.Value>
                                            <DrawingBrush TileMode="Tile"
                                                          Viewport="{StaticResource HatchLineGapRectangle}"
                                                          ViewportUnits="Absolute"
                                                          Viewbox="{StaticResource HatchLineGapRectangle}"
                                                          ViewboxUnits="Absolute"
                                                          Stretch="Fill"
                                                          AlignmentX="Left"
                                                          AlignmentY="Top">
                                                <DrawingBrush.Drawing>
                                                    <GeometryDrawing>
                                                        <GeometryDrawing.Geometry>
                                                            <!-- Extend the line slightly beyond tile boundaries -->
                                                            <LineGeometry StartPoint="{StaticResource HatchLine0Start}"
                                                                          EndPoint="{StaticResource HatchLine0End}" />
                                                        </GeometryDrawing.Geometry>
                                                        <GeometryDrawing.Pen>
                                                            <Pen Thickness="{StaticResource HatchLineThickness}"
                                                                 Brush="{Binding PresentationOptions.Fill.BrushModel,Converter={StaticResource drawBrushToBrushConverter}}" />
                                                        </GeometryDrawing.Pen>
                                                    </GeometryDrawing>
                                                </DrawingBrush.Drawing>
                                            </DrawingBrush>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <!--#endregion-->
                                <!--#region LinePattern90 -->
                                <DataTrigger Binding="{Binding PresentationOptions.FillPattern}"
                                             Value="{x:Static drawingEnums:FillPatternType.HatchLineVerticalPattern}">
                                    <Setter Property="Fill">
                                        <Setter.Value>
                                            <DrawingBrush TileMode="Tile"
                                                          Viewport="{StaticResource HatchLineGapRectangle}"
                                                          ViewportUnits="Absolute"
                                                          Viewbox="{StaticResource HatchLineGapRectangle}"
                                                          ViewboxUnits="Absolute"
                                                          Stretch="Fill"
                                                          AlignmentX="Left"
                                                          AlignmentY="Top">
                                                <DrawingBrush.Drawing>
                                                    <GeometryDrawing>
                                                        <GeometryDrawing.Geometry>
                                                            <!-- Extend the line slightly beyond tile boundaries -->
                                                            <LineGeometry StartPoint="{StaticResource HatchLine90Start}"
                                                                          EndPoint="{StaticResource HatchLine90End}" />
                                                        </GeometryDrawing.Geometry>
                                                        <GeometryDrawing.Pen>
                                                            <Pen Thickness="{StaticResource HatchLineThickness}"
                                                                 Brush="{Binding PresentationOptions.Fill.BrushModel,Converter={StaticResource drawBrushToBrushConverter}}" />
                                                        </GeometryDrawing.Pen>
                                                    </GeometryDrawing>
                                                </DrawingBrush.Drawing>
                                            </DrawingBrush>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <!--#endregion-->
                            </Style.Triggers>
                        </Style>
                    </Path.Style>
                    <Path.ContextMenu>
                        <ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                            <MenuItem Header="{StaticResource lngDrawPresentationOptions}"
                                      Command="{Binding OpenEditDrawingCommand}">
                                <MenuItem.Icon>
                                    <cc:Icon GeometryData="{StaticResource EditGeometry}"
                                             Fill="{DynamicResource SecondaryBrush}"
                                             Height="12" />
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </Path.ContextMenu>
                </Path>
                <Path Data="{Binding TextPathDataGeometry}"
                      Fill="{DynamicResource PrimaryTextBrush}"
                      Panel.ZIndex="10000">
                </Path>
            </Grid>
        </DataTemplate>
        <!--#endregion-->
        
        <!--#region Dimensions Template -->
        <DataTemplate DataType="{x:Type drawingVm:DimensionLineDrawingViewModel}"
                      x:Key="DimensionsDataTemplate">
            <Grid>
                <Grid.Triggers>
                    <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                        <BeginStoryboard Storyboard="{StaticResource FadeInStoryboard}" />
                    </EventTrigger>
                </Grid.Triggers>

                <!--#region Hover Area Path -->
                <Path x:Name="hoverAreaPath"
                      Data="{Binding TotalPathDataGeometry}"
                      StrokeThickness="20"
                      Stroke="Transparent"
                      Panel.ZIndex="10001">
                    <!-- Trigger to change the opacity of paths on hover -->
                    <Path.Triggers>
                        <!-- On Mouse Enter, fade paths to 0.5 opacity -->
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="DimensionLinePath"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0.5"
                                                     Duration="0:0:0.2" />
                                    <DoubleAnimation Storyboard.TargetName="DimensionLineArrowsPath"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0.5"
                                                     Duration="0:0:0.2" />
                                    <DoubleAnimation Storyboard.TargetName="DimensionTextPath"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0.5"
                                                     Duration="0:0:0.2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <!-- On Mouse Leave, reset paths to full opacity -->
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="DimensionLinePath"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="1.0"
                                                     Duration="0:0:0.2" />
                                    <DoubleAnimation Storyboard.TargetName="DimensionLineArrowsPath"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="1.0"
                                                     Duration="0:0:0.2" />
                                    <DoubleAnimation Storyboard.TargetName="DimensionTextPath"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="1.0"
                                                     Duration="0:0:0.2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Path.Triggers>
                    <Path.ContextMenu>
                        <ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                            <MenuItem Header="{StaticResource lngDrawPresentationOptions}"
                                      Command="{Binding OpenEditDrawingCommand}">
                                <MenuItem.Icon>
                                    <cc:Icon GeometryData="{StaticResource EditGeometry}"
                                             Fill="{DynamicResource SecondaryBrush}"
                                             Height="12" />
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </Path.ContextMenu>
                </Path>
                <!--#endregion-->

                <Path Data="{Binding PathDataGeometry}"
                      Stroke="{Binding PresentationOptions.Stroke.BrushModel,Converter={StaticResource drawBrushToBrushConverter}}"
                      StrokeThickness="{Binding PresentationOptions.StrokeThickness}"
                      StrokeDashArray="{Binding PresentationOptions.StrokeDashArray,Converter={StaticResource listOfDoubleToDoubleCollectionConverter}}"
                      StrokeLineJoin="Round"
                      Opacity="{Binding PresentationOptions.Opacity}"
                      Panel.ZIndex="{Binding LayerNo}"
                      x:Name="DimensionLinePath">
                </Path>
                <Path Data="{Binding DimensionArrowheadsGeometry}"
                      Fill="{Binding PresentationOptions.Stroke.BrushModel,Converter={StaticResource drawBrushToBrushConverter}}"
                      x:Name="DimensionLineArrowsPath" />
                <Path Data="{Binding TextPathDataGeometry}"
                      Fill="{Binding PresentationOptions.Stroke.BrushModel,Converter={StaticResource drawBrushToBrushConverter}}"
                      Panel.ZIndex="10000"
                      x:Name="DimensionTextPath">
                </Path>
            </Grid>
        </DataTemplate>
        <!--#endregion-->
        
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
            <DockPanel Grid.Row="0">
                <!--#region ERROR MESSAGES OF THE DRAW GENERATION PROCESS -->
                <ListBox ItemsSource="{Binding ErrorMessages}"
                         FontSize="12"
                         FontStyle="Italic"
                         FontWeight="Bold"
                         BorderThickness="0"
                         IsHitTestVisible="False"
                         Margin="0,0,0,10"
                         VerticalAlignment="Top"
                         Panel.ZIndex="50">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding .}"
                                       Foreground="Red" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <!--#endregion-->
                <Canvas Width="{Binding ContainerLength}"
                        Height="{Binding ContainerHeight}"
                        Margin="{Binding ContainerMargin}">
                    <!--#region SHAPES -->
                    <ItemsControl ItemsSource="{Binding Drawings}"
                                  Panel.ZIndex="{Binding LayerNo}"
                                  x:Name="drawingsItemsControl"
                                  HorizontalAlignment="Center"
                                  ItemTemplate="{StaticResource ShapeDataTemplate}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Grid />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                    <!--#endregion-->
                    <!--#region DIMENSIONS -->
                    <ItemsControl ItemsSource="{Binding Dimensions}"
                                  Panel.ZIndex="{Binding LayerNo}"
                                  x:Name="dimensionsItemsControl"
                                  HorizontalAlignment="Center"
                                  ItemTemplate="{StaticResource DimensionsDataTemplate}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Grid />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                    <!--#endregion-->
                    <!--#region HelpLines -->
                    <ItemsControl ItemsSource="{Binding HelpLines}"
                                  Panel.ZIndex="{Binding LayerNo}"
                                  x:Name="helpLinesItemsControl"
                                  HorizontalAlignment="Center"
                                  ItemTemplate="{StaticResource ShapeDataTemplate}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Grid />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                    <!--#endregion-->
                    <!---->
                </Canvas>
            </DockPanel>
    </Grid>
</UserControl>
