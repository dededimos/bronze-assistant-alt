<UserControl x:Class="BronzeFactoryApplication.Views.ComponentsUC.EditModelUserControl.EditCabinSettingsUC"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:local="clr-namespace:BronzeFactoryApplication.Views.ComponentsUC"
             xmlns:cachedImage="clr-namespace:CachedImage.Core;assembly=CachedImage.Core"
             xmlns:cc="clr-namespace:TasCustomControlsLibrary.CustomControls;assembly=TasCustomControlsLibrary"
             xmlns:vm="clr-namespace:BronzeFactoryApplication.ViewModels.CabinsViewModels.ModelsViewModels.SettingsViewModels"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:b="clr-namespace:BronzeFactoryApplication.Helpers.Behaviours"
             xmlns:ext="clr-namespace:BronzeFactoryApplication.Helpers.MarkupExtensions"
             xmlns:enums="clr-namespace:ShowerEnclosuresModelsLibrary.Enums;assembly=ShowerEnclosuresModelsLibrary"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=vm:EditCabinSettingsViewModel}">
    <Grid>
        <Grid.Resources>
            <Style TargetType="{x:Type cc:Icon}" BasedOn="{StaticResource CInfoTooltipIcon}"/>
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxExtend}">
                <Setter Property="ToolTipService.Placement" Value="Right"/>
                <Setter Property="ToolTipService.VerticalOffset" Value="-17.5"/>
                <Setter Property="ToolTipService.InitialShowDelay" Value="0"/>
                <Setter Property="ToolTipService.BetweenShowDelay" Value="0"/>
                <Setter Property="ToolTipService.ShowsToolTipOnKeyboardFocus" Value="True"/>
                <Setter Property="Width" Value="250"/>
            </Style>
            <Style x:Key="VerticalDivider" TargetType="{x:Type hc:Divider}" BasedOn="{StaticResource DividerBaseStyle}">
                <Setter Property="Orientation" Value="Vertical"/>
                <Setter Property="Width" Value="25"/>
                <Setter Property="Height" Value="120"/>
                <Setter Property="LineStroke" Value="{DynamicResource PrimaryBrush}"/>
                <Setter Property="LineStrokeThickness" Value="0.5"/>
            </Style>
            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ComboBoxExtend}">
                <Setter Property="Width" Value="250"/>
            </Style>
        </Grid.Resources>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <!--#region 1.Title -->
        <StackPanel Grid.Row="0" 
                    Grid.Column="0">
            <TextBlock Text="{StaticResource lngCommonPartProperties}"
                       Style="{StaticResource CHeaderTextBlock}"
                       TextDecorations="Underline"
                       Margin="0,0,0,10"/>
        </StackPanel>
        <!--#endregion-->

        <!--#region 2.Properties of Settings -->

        <StackPanel x:Name="CommonConstraintsStackPanel"
                    HorizontalAlignment="Center"
                    Grid.Row="1" 
                    Grid.Column="0">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <StackPanel>

                    <!--#region A. Model -->
                    <StackPanel x:Name="ModelStackPanel"
                                Margin="0,5" 
                                IsEnabled="False">
                        <DockPanel>
                            <cc:Icon ToolTip="{StaticResource lngModelTooltip}"/>
                            <TextBlock x:Name="ModelTextBlock" DockPanel.Dock="Left"
                                       Style="{StaticResource TitleTextBlockStyle}"
                                       Text="{StaticResource lngModel}">
                            </TextBlock>
                        </DockPanel>
                        <ComboBox x:Name="ModelComboBox"
                                  ItemsSource="{Binding Source={ext:BindingSourceEnumValues {x:Type enums:CabinModelEnum}}}"
                                  SelectedItem="{Binding Model , Mode=TwoWay}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Converter={StaticResource languageConverter} , TargetNullValue=''}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </StackPanel>
                    <!--#endregion-->

                    <!--#region B. MetalFinish -->
                    <StackPanel x:Name="MetalFinishStackPanel"
                                Margin="0,5">
                        <DockPanel>
                            <cc:Icon ToolTip="{StaticResource lngMetalFinishTooltip}"/>
                            <TextBlock x:Name="MetalFinishTextBlock" DockPanel.Dock="Left"
                                       Style="{StaticResource TitleTextBlockStyle}"
                                       Text="{StaticResource lngMetalFinish}">
                            </TextBlock>
                        </DockPanel>
                        <ComboBox x:Name="MetalFinishComboBox"
                                  ItemsSource="{Binding Source={ext:BindingSourceEnumValues {x:Type enums:CabinFinishEnum}}}"
                                  SelectedItem="{Binding MetalFinish , Mode=TwoWay}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Converter={StaticResource languageConverter} , TargetNullValue=''}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </StackPanel>
                    <!--#endregion-->

                    <!--#region C. Thicknesses -->
                    <StackPanel x:Name="ThicknessesStackPanel"
                                Margin="0,5">
                        <DockPanel>
                            <cc:Icon ToolTip="{StaticResource lngGlassThicknessTooltip}"/>
                            <TextBlock x:Name="ThicknessesTextBlock" DockPanel.Dock="Left"
                                       Style="{StaticResource TitleTextBlockStyle}"
                                       Text="{StaticResource lngGlassThickness}">
                            </TextBlock>
                        </DockPanel>
                        <ComboBox x:Name="ThicknessesComboBox"
                                  ItemsSource="{Binding Source={ext:BindingSourceEnumValues {x:Type enums:CabinThicknessEnum}}}"
                                  SelectedItem="{Binding Thicknesses , Mode=TwoWay}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Converter={StaticResource languageConverter} , TargetNullValue=''}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </StackPanel>
                    <!--#endregion-->

                </StackPanel>

                <hc:Divider Style="{StaticResource VerticalDivider}"/>

                <StackPanel>

                    <!--#region D. GlassFinish -->
                    <StackPanel x:Name="GlassFinishStackPanel"
                                Margin="0,5">
                        <DockPanel>
                            <cc:Icon ToolTip="{StaticResource lngGlassFinishTooltip}"/>
                            <TextBlock x:Name="GlassFinishTextBlock" DockPanel.Dock="Left"
                                       Style="{StaticResource TitleTextBlockStyle}"
                                       Text="{StaticResource lngGlassFinish}">
                            </TextBlock>
                        </DockPanel>
                        <ComboBox x:Name="GlassFinishComboBox"
                                  ItemsSource="{Binding Source={ext:BindingSourceEnumValues {x:Type enums:GlassFinishEnum}}}"
                                  SelectedItem="{Binding GlassFinish , Mode=TwoWay}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Converter={StaticResource languageConverter} , TargetNullValue=''}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </StackPanel>
                    <!--#endregion-->

                    <!--#region E. Height -->
                    <StackPanel x:Name="HeightStackPanel"
                                Margin="0,5">
                        <DockPanel>
                            <cc:Icon ToolTip="{StaticResource lngHeightmmTooltip}"/>
                            <TextBlock x:Name="HeightTextBlock"
                                       Style="{StaticResource TitleTextBlockStyle}"
                                       Text="{StaticResource lngHeightmm}">
                            </TextBlock>
                        </DockPanel>
                        <TextBox x:Name="HeightTextBox" d:Text="1000"
                                     Text="{Binding Height ,Mode=TwoWay , TargetNullValue=''}">
                            <i:Interaction.Behaviors>
                                <b:TextBoxNumericInputBehavior Precision="0" 
                                                               InputMode="DigitInput"
                                                               JustPositivDecimalInput="True"/>
                            </i:Interaction.Behaviors>
                        </TextBox>
                    </StackPanel>
                    <!--#endregion-->

                    <!--#region F. NominalLength -->
                    <StackPanel x:Name="NominalLengthStackPanel"
                                Margin="0,5">
                        <DockPanel>
                            <cc:Icon ToolTip="{StaticResource lngNominalLengthTooltip}"/>
                            <TextBlock x:Name="NominalLengthTextBlock"
                                       Style="{StaticResource TitleTextBlockStyle}"
                                       Text="{StaticResource lngNominalLength}">
                            </TextBlock>
                        </DockPanel>
                        <TextBox x:Name="NominalLengthTextBox" d:Text="1000"
                                     Text="{Binding NominalLength ,Mode=TwoWay , TargetNullValue=''}">
                            <i:Interaction.Behaviors>
                                <b:TextBoxNumericInputBehavior Precision="0" 
                                                               InputMode="DigitInput"
                                                               JustPositivDecimalInput="True"/>
                            </i:Interaction.Behaviors>
                        </TextBox>
                    </StackPanel>
                    <!--#endregion-->

                </StackPanel>
            </StackPanel>
            
            
            <StackPanel Orientation="Horizontal" 
                        HorizontalAlignment="Center"
                        Margin="0,15,0,5">
                <ToggleButton IsChecked="{Binding IsReversible, Mode=TwoWay}">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton" BasedOn="{StaticResource ToggleButtonSwitch}">
                            <!--<Style.Resources>
                                --><!--To Hack Through the Style that has Set PrimaryBrush as Color and We Cannot Change otherwise--><!--
                                <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource BackgroundColor}"/>
                            </Style.Resources>-->
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}" Value="True">
                                    <Setter Property="Content" Value="{StaticResource lngReversible}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked}" Value="False">
                                    <Setter Property="Content" Value="{StaticResource lngNonReversible}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <cc:Icon ToolTip="{StaticResource lngReversibleTooltip}" Margin="10,0,0,0"/>
            </StackPanel>

        </StackPanel>

        <!--#endregion-->

        <DockPanel Grid.Row="2"
                   Margin="0,20"
                   LastChildFill="True">
            <TextBlock Text="{StaticResource lngNotes}"
                       Style="{StaticResource CHeaderTextBlock}"
                       DockPanel.Dock="Top" />
            <TextBox MaxLength="2000"
                     DockPanel.Dock="Top"
                     VerticalAlignment="Stretch"
                     Width="auto"
                     MaxHeight="150"
                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                     TextAlignment="Center"
                     VerticalContentAlignment="Top"
                     FontSize="12"
                     TextWrapping="Wrap"
                     AcceptsReturn="True"
                     d:Text="Test Notes"
                     Text="{Binding Notes, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" />
        </DockPanel>



    </Grid>
</UserControl>
